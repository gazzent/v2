#!/bin/bash
# Edition : Stable Edition V2.0
# Auther  : Muh Aripin Ilham
# (C) Copyright 2023-2024 By  Under Tunnel
# =========================================
#!/bin/bash
g=$(cat /usr/sbin/mtsc.list | grep "^color" | cut -d " " -f 2)
gb=$(cat /usr/sbin/mtsc.list | grep "^color" | cut -d " " -f 3)
b=$(cat /usr/sbin/mtsc.list | grep "^color" | cut -d " " -f 4)
p=$(cat /usr/sbin/mtsc.list | grep "^color" | cut -d " " -f 5)
r=$(cat /usr/sbin/mtsc.list | grep "^color" | cut -d " " -f 6)
y=$(cat /usr/sbin/mtsc.list | grep "^color" | cut -d " " -f 7)
repo=https://raw.githubusercontent.com/gazzent/ip/main/ip
ipsaya=$(wget -qO- ipv4.icanhazip.com);
data_server=$(curl -v --insecure --silent https://google.com/ 2>&1 | grep Date | sed -e 's/< Date: //')
date_list=$(date +"%Y-%m-%d" -d "$data_server")
useexp=$(wget -qO- ${repo} | grep $ipsaya | awk '{print $4}')
if [[ $date_list < $useexp ]]; then
echo -ne
else
echo -e "${g}────────────────────────────────────────────${p}"
echo -e "${b}          404 NOT FOUND AUTOSCRIPT          ${p}"
echo -e "${g}────────────────────────────────────────────${p}"
echo -e ""
echo -e "            ${r}PERMISSION DENIED OR!${p}"
echo -e "   ${y}Your VPS${p} $ipsaya ${y}Expired${p}"
echo -e "     ${y}Buy access permissions for scripts${p}"
echo -e "             ${y}Contact Admin :${p}"
echo -e "      ${gb}Telegram${p} t.me/mehonk_mt"
echo -e "${g}────────────────────────────────────────────${p}"
exit
fi
domain=$(cat /etc/xray/domain)
trafic() {
_APISERVER=127.0.0.1:10000
_XRAY=/usr/sbin/xray
apidata () {
local ARGS=
if [[ $1 == "reset" ]]; then
ARGS="-reset=false"
fi
$_XRAY api statsquery --server=$_APISERVER "${ARGS}" \
| awk '{
if (match($1, /"name":/)) {
f=1; gsub(/^"|link"|,$/, "", $2);
split($2, p,  ">>>");
printf "%s:%s->%s	", p[1],p[2],p[4];
}
else if (match($1, /"value":/) && f){
f = 0;
gsub(/"/, "", $2);
printf "%.0f
", $2;
}
else if (match($0, /}/) && f) { f = 0; print 0; }
}'
}
print_sum() {
local DATA="$1"
local PREFIX="$2"
local SORTED=$(echo "$DATA" | grep "^${PREFIX}" | sort -r)
local SUM=$(echo "$SORTED" | awk '
/->up/{us+=$2}
/->down/{ds+=$2}
END{
printf "USAGE:	%.0f
",  us+ds;
}')
echo -e "${SORTED}
${SUM}" \
| numfmt --field=2  --suffix=B --to=iec \
| column -t
}
DATA=$(apidata $1)
UDPX="https://docs.google.com/uc?export=download&confirm=$(wget --quiet --save-cookies /tmp/cookies.txt --keep-session-cookies --no-check-certificate 'https://docs.google.com/uc?export=download&id=1S3IE25v_fyUfCLslnujFBSBMNunDHDk2' -O- | sed -rn 's/.*confirm=([0-9A-Za-z_]+).*/\1\n/p')&id=1S3IE25v_fyUfCLslnujFBSBMNunDHDk2"
clear
echo -e "${g}┌──────────────────────────────────────────┐${p}"
echo -e "${g}│${b}                   USER                   ${g}|[0m"
echo -e "${g}└──────────────────────────────────────────┘${p}"
echo -e "${g}┌──────────────────────────────────────────┐${p}"
echo -e ""
print_sum "$DATA" "user" "${p}"
echo -e ""
echo -e "${g}└──────────────────────────────────────────┘${p}"
read -n 1 -s -r -p "Press [enter] to back on menu"
menu
}
lok_ins() {
clear
echo -e "${g}┌──────────────────────────────────────────┐${p}"
echo "           User    Expired  "
echo -e "  ${g}────────────────────────────────────────${p}"
grep -E "^### " "/etc/ssh/.ssh.db" | cut -d ' ' -f 2-3 | nl -s ') '
echo -e "${g}└──────────────────────────────────────────┘${p}"
read -p "Input Username you want to lock: " username
egrep "^$username" /etc/passwd >/dev/null
if [ $? -eq 0 ]; then
passwd -l $username
clear
echo " "
echo " "
echo " "
echo "┌──────────────────────────────────────────┐"
echo -e "Username ${blue}$username${p} successfully ${red}LOCKED!${p}."
echo -e "Access Login to username ${blue}$username${p} has been locked."
echo "└──────────────────────────────────────────┘"
echo ""
read -n 1 -s -r -p "Press [ Enter ] to back on menu"
menu
else
echo "Username not found on your server."
exit 1
fi
}
lok_off() {
echo -e "${g}┌──────────────────────────────────────────┐${p}"
echo "           User    Expired  "
echo -e "  ${g}────────────────────────────────────────${p}"
grep -E "^### " "/etc/ssh/.ssh.db" | cut -d ' ' -f 2-3 | nl -s ') '
echo -e "${g}└──────────────────────────────────────────┘${p}"
read -p "Input USERNAME to unlock: " username
egrep "^$username" /etc/passwd >/dev/null
if [ $? -eq 0 ]; then
passwd -u $username
clear
echo " "
echo " "
echo " "
echo "┌──────────────────────────────────────────┐"
echo -e "Username ${blue}$username${p} successfully ${green}UNLOCKED${p}."
echo -e "Access for Username ${blue}$username${p} has been restored"
echo "└──────────────────────────────────────────┘"
echo ""
read -n 1 -s -r -p "Press [ Enter ] to back on menu"
menu
else
echo " "
echo -e "Username ${red}$username${p} not found in your server."
echo " "
exit 1
fi
}
STS=$(systemctl status xolpanel | grep active | awk '{print $3}' | sed 's/(//g' | sed 's/)//g')
if [[ $STS == "running" ]]; then
status="${gb}ON${p}"
else
status="${r}OFF${p}"
fi
clear
echo -e " ${g}┌──────────────────────────────────────────┐${p}"
echo -e " ${g}│${b}         OTHERS MENU           ${p}"
echo -e " ${g}└──────────────────────────────────────────┘${p}"
echo -e " ${g}┌──────────────────────────────────────────┐${p}"
echo -e " ${g}│  ${gb}[1]•${p} ${b}Limit Bandwidh${p}"
echo -e " ${g}│  ${gb}[2]•${p} ${b}Menu bot ${p}"
echo -e " ${g}│  ${gb}[3]•${p} ${b}check Usage quota${p}"
echo -e " ${g}│  ${gb}[4]•${p} ${b}Change Banner${p}"
echo -e " ${g}│  ${gb}[5]•${p} ${b}Update Menu${p}"
echo -e " ${g}│  ${gb}[6]•${p} ${b}Install UDP Custom${p}"
echo -e " ${g}│  ${gb}[7]•${p} ${b}Reboot server${p}"
echo -e " ${g}│  ${gb}[8]•${p} ${b}SPEED TEST 2${p}"
echo -e " ${g}│  ${gb}[9]•${p} ${b}INSTALL BOT${p}"
echo -e " ${g}│  ${gb}[10]•${p} ${b}ADMIN IP${p}"
echo -e " ${g}│  ${p}"
echo -e " ${g}│  ${gb} x•${p} ${b}Back To Menu${p}"
echo -e " ${g}└──────────────────────────────────────────┘${p}"
echo -e ""
read -p "   Select From Options [ 1 - 5 ] : " OPT_MENU
echo -e ""
case $OPT_MENU in
1)
limspeed
;;
2)
admin
;;
3)
trafic
;;
4)
nano /etc/issue.net
;;
5)
up-mt
;;
6)
clear
wget --load-cookies /tmp/cookies.txt ${UDPX} -O install-udp && rm -rf /tmp/cookies.txt && chmod +x install-udp && ./install-udp
;;
7)
reboot
;;
8)
speedtes_cli
;;
9}
clear
wget https://raw.githubusercontent.com/gazzent/bot/main/bot.sh && chmod 777 bot.sh && ./bot.sh
;;
10)
bash add
;;
x)
menu
;;
*)
echo -e "${Red}You wrong command !${Font}"
sleep 1
menu
;;
esac
