#!/bin/bash
# Edition : Stable Edition V2.0
# Auther  : Muh Aripin Ilham
# (C) Copyright 2023-2024 By  Under Tunnel
# =========================================
#!/bin/bash
g=$(cat /usr/sbin/mtsc.list | grep "^color" | cut -d " " -f 2)
gb=$(cat /usr/sbin/mtsc.list | grep "^color" | cut -d " " -f 3)
b=$(cat /usr/sbin/mtsc.list | grep "^color" | cut -d " " -f 4)
p=$(cat /usr/sbin/mtsc.list | grep "^color" | cut -d " " -f 5)
r=$(cat /usr/sbin/mtsc.list | grep "^color" | cut -d " " -f 6)
y=$(cat /usr/sbin/mtsc.list | grep "^color" | cut -d " " -f 7)
MYIP=$(wget -qO- ipv4.icanhazip.com);
echo "Loading..."
repo=https://raw.githubusercontent.com/gazzent/ip/main/ip
ipsaya=$(wget -qO- ipv4.icanhazip.com);
data_server=$(curl -v --insecure --silent https://google.com/ 2>&1 | grep Date | sed -e 's/< Date: //')
date_list=$(date +"%Y-%m-%d" -d "$data_server")
useexp=$(wget -qO- ${repo} | grep $ipsaya | awk '{print $4}')
if [[ $date_list < $useexp ]]; then
echo -ne
else
echo -e "${g}────────────────────────────────────────────${p}"
echo -e "${b}          404 NOT FOUND AUTOSCRIPT          ${p}"
echo -e "${g}────────────────────────────────────────────${p}"
echo -e ""
echo -e "            ${r}PERMISSION DENIED OR!${p}"
echo -e "   ${y}Your VPS${p} $ipsaya ${y}Expired${p}"
echo -e "     ${y}Buy access permissions for scripts${p}"
echo -e "             ${y}Contact Admin :${p}"
echo -e "      ${gb}Telegram${p} t.me/mehonk_mt"
echo -e "${g}────────────────────────────────────────────${p}"
exit
fi
vm() {
clear
NUMBER_OF_CLIENTS=$(grep -c -E "^### " "/etc/vmess/.vmess.db")
if [[ ${NUMBER_OF_CLIENTS} == '0' ]]; then
clear
echo -e "${g}┌──────────────────────────────────────────┐${p}"
echo -e " ${b}       Renew Xray/Vmess Account           ${p}"
echo -e "${g}└──────────────────────────────────────────┘${p}"
echo -e "${g}┌──────────────────────────────────────────┐${p}"
echo "      You have no existing clients!"
echo -e "${g}└──────────────────────────────────────────┘${p}"
echo ""
read -n 1 -s -r -p "Press [ Enter ] to back on menu"
menu
fi
clear
echo -e "${g}┌──────────────────────────────────────────┐${p}"
echo -e " ${b}       Renew Xray/Vmess Account           ${p}"
echo -e "${g}└──────────────────────────────────────────┘${p}"
echo -e "${g}┌──────────────────────────────────────────┐${p}"
echo "           User    Expired  "
echo -e "  ${g}────────────────────────────────────────${p}"
grep -E "^### " "/etc/vmess/.vmess.db" | cut -d ' ' -f 2-3 | nl -s ') '
echo -e "${g}└──────────────────────────────────────────┘${p}"
until [[ ${CLIENT_NUMBER} -ge 1 && ${CLIENT_NUMBER} -le ${NUMBER_OF_CLIENTS} ]]; do
if [[ ${CLIENT_NUMBER} == '1' ]]; then
read -rp "Select one client [1]: " CLIENT_NUMBER
else
read -rp "Select one client [1-${NUMBER_OF_CLIENTS}]: " CLIENT_NUMBER
fi
done
user=$(grep -E "^### " "/etc/vmess/.vmess.db" | cut -d ' ' -f 2 | sed -n "${CLIENT_NUMBER}"p)
if [ -z $user ]; then
echo -e "${g}┌──────────────────────────────────────────┐${p}"
echo -e "       Username cannot be empty "
echo -e "${g}└──────────────────────────────────────────┘${p}"
echo ""
read -n 1 -s -r -p "Press [ Enter ] to back on menu"
menu
else
read -p "Expired (days): " masaaktif
read -p "Limit Quota (GB): " Quota
read -p "Limit User (IP): " iplim
exp=$(grep -wE "^#vm# $user" "/etc/xray/config.json" | cut -d ' ' -f 3 | sort | uniq)
now=$(date +%Y-%m-%d)
d1=$(date -d "$exp" +%s)
d2=$(date -d "$now" +%s)
exp2=$(((d1 - d2) / 86400))
exp3=$(($exp2 + $masaaktif))
exp4=$(date -d "$exp3 days" +"%Y-%m-%d")
sed -i "/#vm# $user/c\#vm# $user $exp4" /etc/xray/config.json
sed -i "/^### $user $exp/d" /etc/vmess/.vmess.db
echo "### ${user} ${exp4}" >>/etc/vmess/.vmess.db
sed -i "s/${exp}/${exp4}/g" /etc/vmess/$user.log
logq=$(grep -o 'User Quota\s*:\s*[^ ]*' /etc/vmess/${user}.log | sed 's/User Quota\s*:\s*//' )
logip=$(grep -o 'Limit Adress\s*:\s*[^ ]*' /etc/vmess/$(user).log | sed 's/Limit Adress\s*:\s*//')
sed -i "s/${exp}/${exp4}/g" /var/www/html/vmess-$user.txt
sed -i "s/${logq}/${Quota}/g" /etc/vmess/$user.log
sed -i "s/${logip}/${iplim}/g" /etc/vmess/$user.log
sed -i "s/${logq}/${Quota}/g" /var/www/html/vmess-$user.txt
sed -i "s/${logip}/${iplim}/g" /var/www/html/vmess-$user.txt
rm /etc/vmess/cache/${user} >/dev/null 2>&1
rm /etc/vmess/${user} >/dev/null 2>&1
c=$(echo "${Quota}" | sed 's/[^0-9]*//g')
d=$((${c} * 1024 * 1024 * 1024))
if [[ ${c} != "0" ]]; then
echo "${d} ${iplim}" >/etc/vmess/${user}
fi
xray api stats --server=127.0.0.1:10000 -name "user>>>${user}>>>traffic>>>downlink" -reset > /dev/null 2>&1
systemctl reload xray >/dev/null 2>&1
clear
echo -e "${g}┌──────────────────────────────────────────┐${p}"
echo "      Vmess Account Was Successfully Renewed"
echo -e "${g}└──────────────────────────────────────────┘${p}"
echo -e "${g}┌──────────────────────────────────────────┐${p}"
echo ""
echo "      Client Name : $user"
echo "      Expired On  : $exp4"
echo ""
echo -e "${g}└──────────────────────────────────────────┘${p}"
echo ""
read -n 1 -s -r -p "Press [ Enter ] to back on menu"
menu
fi
}
vl() {
clear
NUMBER_OF_CLIENTS=$(grep -c -E "^### " "/etc/vless/.vless.db")
if [[ ${NUMBER_OF_CLIENTS} == '0' ]]; then
clear
echo -e "${g}┌──────────────────────────────────────────┐${p}"
echo -e "  ${b}       Renew Xray/Vless Account           ${p}"
echo -e "${g}└──────────────────────────────────────────┘${p}"
echo -e "${g}┌──────────────────────────────────────────┐${p}"
echo "      You have no existing clients!"
echo -e "${g}└──────────────────────────────────────────┘${p}"
echo ""
read -n 1 -s -r -p "Press [ Enter ] to back on menu"
menu
fi
clear
echo -e "${g}┌──────────────────────────────────────────┐${p}"
echo -e " ${b}       Renew Xray/Vless Account           ${p}"
echo -e "${g}└──────────────────────────────────────────┘${p}"
echo -e "${g}┌──────────────────────────────────────────┐${p}"
echo "           User    Expired  "
echo -e "  ${g}────────────────────────────────────────${p}"
grep -E "^### " "/etc/vless/.vless.db" | cut -d ' ' -f 2-3 | nl -s ') '
echo -e "${g}└──────────────────────────────────────────┘${p}"
until [[ ${CLIENT_NUMBER} -ge 1 && ${CLIENT_NUMBER} -le ${NUMBER_OF_CLIENTS} ]]; do
if [[ ${CLIENT_NUMBER} == '1' ]]; then
read -rp "Select one client [1]: " CLIENT_NUMBER
else
read -rp "Select one client [1-${NUMBER_OF_CLIENTS}]: " CLIENT_NUMBER
fi
done
user=$(grep -E "^### " "/etc/vless/.vless.db" | cut -d ' ' -f 2 | sed -n "${CLIENT_NUMBER}"p)
if [ -z $user ]; then
echo -e "${g}┌──────────────────────────────────────────┐${p}"
echo -e "       Username cannot be empty "
echo -e "${g}└──────────────────────────────────────────┘${p}"
echo ""
read -n 1 -s -r -p "Press [ Enter ] to back on menu"
menu
else
read -p "Expired (days): " masaaktif
read -p "Limit Quota (GB): " Quota
read -p "Limit User (IP): " iplim
exp=$(grep -wE "^#vl# $user" "/etc/xray/config.json" | cut -d ' ' -f 3 | sort | uniq)
now=$(date +%Y-%m-%d)
d1=$(date -d "$exp" +%s)
d2=$(date -d "$now" +%s)
exp2=$(((d1 - d2) / 86400))
exp3=$(($exp2 + $masaaktif))
exp4=$(date -d "$exp3 days" +"%Y-%m-%d")
sed -i "/#vl# $user/c\#vl# $user $exp4" /etc/xray/config.json
sed -i "/^### $user $exp/d" /etc/vless/.vless.db
echo "### ${user} ${exp4}" >>/etc/vless/.vless.db
sed -i "s/${exp}/${exp4}/g" /etc/vless/$user.log
logq=$(grep -o 'User Quota\s*:\s*[^ ]*' /etc/vless/${user}.log | sed 's/User Quota\s*:\s*//' )
logip=$(grep -o 'Limit Adress\s*:\s*[^ ]*' /etc/vless/$(user).log | sed 's/Limit Adress\s*:\s*//')
sed -i "s/${exp}/${exp4}/g" /var/www/html/vless-$user.txt
sed -i "s/${logq}/${Quota}/g" /etc/vless/$user.log
sed -i "s/${logip}/${iplim}/g" /etc/vless/$user.log
sed -i "s/${logq}/${Quota}/g" /var/www/html/vless-$user.txt
sed -i "s/${logip}/${iplim}/g" /var/www/html/vless-$user.txt
rm /etc/vless/cache/${user} >/dev/null 2>&1
rm /etc/vless/${user} >/dev/null 2>&1
c=$(echo "${Quota}" | sed 's/[^0-9]*//g')
d=$((${c} * 1024 * 1024 * 1024))
if [[ ${c} != "0" ]]; then
echo "${d} ${iplim}" >/etc/vless/${user}
fi
xray api stats --server=127.0.0.1:10000 -name "user>>>${user}>>>traffic>>>downlink" -reset > /dev/null 2>&1
systemctl reload xray >/dev/null 2>&1
clear
echo -e "${g}┌──────────────────────────────────────────┐${p}"
echo "      Vless Account Was Successfully Renewed"
echo -e "${g}└──────────────────────────────────────────┘${p}"
echo -e "${g}┌──────────────────────────────────────────┐${p}"
echo ""
echo "      Client Name : $user"
echo "      Expired On  : $exp4"
echo ""
echo -e "${g}└──────────────────────────────────────────┘${p}"
echo ""
read -n 1 -s -r -p "Press [ Enter ] to back on menu"
menu
fi
}
tr() {
clear
NUMBER_OF_CLIENTS=$(grep -c -E "^### " "/etc/trojan/.trojan.db")
if [[ ${NUMBER_OF_CLIENTS} == '0' ]]; then
clear
echo -e "${g}┌──────────────────────────────────────────┐${p}"
echo -e " ${b}      Renew Xray/Trojan Account           ${p}"
echo -e "${g}└──────────────────────────────────────────┘${p}"
echo -e "${g}┌──────────────────────────────────────────┐${p}"
echo "      You have no existing clients!"
echo -e "${g}└──────────────────────────────────────────┘${p}"
echo ""
read -n 1 -s -r -p "Press [ Enter ] to back on menu"
menu
fi
clear
echo -e "${g}┌──────────────────────────────────────────┐${p}"
echo -e " ${b}    Renew Xray/Trojan Account             ${p}"
echo -e "${g}└──────────────────────────────────────────┘${p}"
echo -e "${g}┌──────────────────────────────────────────┐${p}"
echo "           User    Expired  "
echo -e "  ${g}────────────────────────────────────────${p}"
grep -E "^### " "/etc/trojan/.trojan.db" | cut -d ' ' -f 2-3 | nl -s ') '
echo -e "${g}└──────────────────────────────────────────┘${p}"
until [[ ${CLIENT_NUMBER} -ge 1 && ${CLIENT_NUMBER} -le ${NUMBER_OF_CLIENTS} ]]; do
if [[ ${CLIENT_NUMBER} == '1' ]]; then
read -rp "Select one client [1]: " CLIENT_NUMBER
else
read -rp "Select one client [1-${NUMBER_OF_CLIENTS}]: " CLIENT_NUMBER
fi
done
user=$(grep -E "^### " "/etc/trojan/.trojan.db" | cut -d ' ' -f 2 | sed -n "${CLIENT_NUMBER}"p)
if [ -z $user ]; then
echo -e "${g}┌──────────────────────────────────────────┐${p}"
echo -e "       Username cannot be empty "
echo -e "${g}└──────────────────────────────────────────┘${p}"
echo ""
read -n 1 -s -r -p "Press [ Enter ] to back on menu"
menu
else
read -p "Expired (days): " masaaktif
read -p "Limit Quota (GB): " Quota
read -p "Limit User (IP): " iplim
exp=$(grep -wE "^#tr# $user" "/etc/xray/config.json" | cut -d ' ' -f 3 | sort | uniq)
now=$(date +%Y-%m-%d)
d1=$(date -d "$exp" +%s)
d2=$(date -d "$now" +%s)
exp2=$(((d1 - d2) / 86400))
exp3=$(($exp2 + $masaaktif))
exp4=$(date -d "$exp3 days" +"%Y-%m-%d")
sed -i "/#tr# $user/c\#tr# $user $exp4" /etc/xray/config.json
sed -i "/^### $user $exp/d" /etc/trojan/.trojan.db
echo "### ${user} ${exp4}" >>/etc/trojan/.trojan.db
sed -i "s/${exp}/${exp4}/g" /etc/trojan/$user.log
logq=$(grep -o 'User Quota\s*:\s*[^ ]*' /etc/trojan/${user}.log | sed 's/User Quota\s*:\s*//' )
logip=$(grep -o 'Limit Adress\s*:\s*[^ ]*' /etc/trojan/$(user).log | sed 's/Limit Adress\s*:\s*//')
sed -i "s/${exp}/${exp4}/g" /var/www/html/trojan-$user.txt
sed -i "s/${logq}/${Quota}/g" /etc/trojan/$user.log
sed -i "s/${logip}/${iplim}/g" /etc/trojan/$user.log
sed -i "s/${logq}/${Quota}/g" /var/www/html/trojan-$user.txt
sed -i "s/${logip}/${iplim}/g" /var/www/html/trojan-$user.txt
rm /etc/trojan/cache/${user} >/dev/null 2>&1
rm /etc/trojan/${user} >/dev/null 2>&1
c=$(echo "${Quota}" | sed 's/[^0-9]*//g')
d=$((${c} * 1024 * 1024 * 1024))
if [[ ${c} != "0" ]]; then
echo "${d} ${iplim}" >/etc/trojan/${user}
fi
xray api stats --server=127.0.0.1:10000 -name "user>>>${user}>>>traffic>>>downlink" -reset > /dev/null 2>&1
systemctl reload xray >/dev/null 2>&1
clear
echo -e "${g}┌──────────────────────────────────────────┐${p}"
echo "      Trojan Account Was Successfully Renewed"
echo -e "${g}└──────────────────────────────────────────┘${p}"
echo -e "${g}┌──────────────────────────────────────────┐${p}"
echo ""
echo "      Client Name : $user"
echo "      Expired On  : $exp4"
echo ""
echo -e "${g}└──────────────────────────────────────────┘${p}"
echo ""
read -n 1 -s -r -p "Press [ Enter ] to back on menu"
menu
fi
}
ss() {
clear
NUMBER_OF_CLIENTS=$(grep -c -E "^### " "/etc/shadowsocks/.shadowsocks.db")
if [[ ${NUMBER_OF_CLIENTS} == '0' ]]; then
clear
echo -e "${g}┌──────────────────────────────────────────┐${p}"
echo -e " ${b}         Renew Xray/Shadowsocks Account   ${p}"
echo -e "${g}└──────────────────────────────────────────┘${p}"
echo -e "${g}┌──────────────────────────────────────────┐${p}"
echo ""
echo "      You have no existing clients!"
echo ""
echo -e "${g}└──────────────────────────────────────────┘${p}"
echo ""
read -n 1 -s -r -p "Press [ Enter ] to back on menu"
menu
fi
clear
echo -e "${g}┌──────────────────────────────────────────┐${p}"
echo -e " ${b}         Renew Xray/Shadowsocks Account   ${p}"
echo -e "${g}└──────────────────────────────────────────┘${p}"
echo -e "${g}┌──────────────────────────────────────────┐${p}"
echo "           User    Expired  "
echo -e "  ${g}────────────────────────────────────────${p}"
grep -E "^### " "/etc/shadowsocks/.shadowsocks.db" | cut -d ' ' -f 2-3 | nl -s ') '
echo -e "${g}└──────────────────────────────────────────┘${p}"
until [[ ${CLIENT_NUMBER} -ge 1 && ${CLIENT_NUMBER} -le ${NUMBER_OF_CLIENTS} ]]; do
if [[ ${CLIENT_NUMBER} == '1' ]]; then
read -rp "Select one client [1]: " CLIENT_NUMBER
else
read -rp "Select one client [1-${NUMBER_OF_CLIENTS}]: " CLIENT_NUMBER
fi
done
user=$(grep -E "^### " "/etc/shadowsocks/.shadowsocks.db" | cut -d ' ' -f 2 | sed -n "${CLIENT_NUMBER}"p)
if [ -z $user ]; then
echo -e "${g}┌──────────────────────────────────────────┐${p}"
echo -e "       Username cannot be empty "
echo -e "${g}└──────────────────────────────────────────┘${p}"
echo ""
read -n 1 -s -r -p "Press [ Enter ] to back on menu"
menu
else
read -p "Expired (days): " masaaktif
read -p "Limit Quota (GB): " Quota
read -p "Limit User (IP): " iplim
exp=$(grep -wE "^#ss# $user" "/etc/xray/config.json" | cut -d ' ' -f 3 | sort | uniq)
now=$(date +%Y-%m-%d)
d1=$(date -d "$exp" +%s)
d2=$(date -d "$now" +%s)
exp2=$(((d1 - d2) / 86400))
exp3=$(($exp2 + $masaaktif))
exp4=$(date -d "$exp3 days" +"%Y-%m-%d")
sed -i "/#ss# $user/c\#ss# $user $exp4" /etc/xray/config.json
sed -i "/^### $user $exp/d" /etc/shadowsocks/.shadowsocks.db
echo "### ${user} ${exp4}" >>/etc/shadowsocks/.shadowsocks.db
sed -i "s/${exp}/${exp4}/g" /etc/shadowsocks/$user.log
logq=$(grep -o 'User Quota\s*:\s*[^ ]*' /etc/shadowsocks/${user}.log | sed 's/User Quota\s*:\s*//' )
logip=$(grep -o 'Limit Adress\s*:\s*[^ ]*' /etc/shadowsocks/$(user).log | sed 's/Limit Adress\s*:\s*//')
sed -i "s/${exp}/${exp4}/g" /var/www/html/ss-$user.txt
sed -i "s/${logq}/${Quota}/g" /etc/shadowsocks/$user.log
sed -i "s/${logip}/${iplim}/g" /etc/shadowsocks/$user.log
sed -i "s/${logq}/${Quota}/g" /var/www/html/ss-$user.txt
sed -i "s/${logip}/${iplim}/g" /var/www/html/ss-$user.txt
rm /etc/shadowsocks/cache/${user} >/dev/null 2>&1
rm /etc/shadowsocks/${user} >/dev/null 2>&1
c=$(echo "${Quota}" | sed 's/[^0-9]*//g')
d=$((${c} * 1024 * 1024 * 1024))
if [[ ${c} != "0" ]]; then
echo "${d} ${iplim}" >/etc/shadowsocks/${user}
fi
xray api stats --server=127.0.0.1:10000 -name "user>>>${user}>>>traffic>>>downlink" -reset > /dev/null 2>&1
systemctl reload xray >/dev/null 2>&1
clear
echo -e "${g}┌──────────────────────────────────────────┐${p}"
echo "  Shadowsocks Account Was Successfully Renewed"
echo -e "${g}└──────────────────────────────────────────┘${p}"
echo -e "${g}┌──────────────────────────────────────────┐${p}"
echo ""
echo "      Client Name : $user"
echo "      Expired On  : $exp4"
echo ""
echo -e "${g}└──────────────────────────────────────────┘${p}"
echo ""
read -n 1 -s -r -p "Press [ Enter ] to back on menu"
menu
fi
}
sssh() {
clear
NUMBER_OF_CLIENTS=$(grep -c -E "^### " "/etc/ssh/.ssh.db")
if [[ ${NUMBER_OF_CLIENTS} == '0' ]]; then
clear
echo -e "${g}┌──────────────────────────────────────────┐${p}"
echo -e "${b}                 RENEW  USER             ${p}"
echo -e "${g}└──────────────────────────────────────────┘${p}"
echo -e "${g}┌──────────────────────────────────────────┐${p}"
echo -e "       Username Dont Exist      "
echo -e "${g}└──────────────────────────────────────────┘${p}"
fi
echo -e "${g}┌──────────────────────────────────────────┐${p}"
echo -e "  ${b}                RENEW  USER              ${p}"
echo -e "${g}└──────────────────────────────────────────┘${p}"
echo -e "${g}┌──────────────────────────────────────────┐${p}"
echo "           User    Expired  "
echo -e "  ${g}────────────────────────────────────────${p}"
grep -E "^### " "/etc/ssh/.ssh.db" | cut -d ' ' -f 2-3 | nl -s ') '
echo -e "${g}└──────────────────────────────────────────┘${p}"
until [[ ${CLIENT_NUMBER} -ge 1 && ${CLIENT_NUMBER} -le ${NUMBER_OF_CLIENTS} ]]; do
if [[ ${CLIENT_NUMBER} == '1' ]]; then
read -rp "Select one client [1]: " CLIENT_NUMBER
else
read -rp "Select one client [1-${NUMBER_OF_CLIENTS}]: " CLIENT_NUMBER
fi
done
user=$(grep -E "^### " "/etc/ssh/.ssh.db" | cut -d ' ' -f 2 | sed -n "${CLIENT_NUMBER}"p)
if [ -z $user ]; then
echo -e "${g}┌──────────────────────────────────────────┐${p}"
echo -e "       Username cannot be empty "
echo -e "${g}└──────────────────────────────────────────┘${p}"
echo ""
read -n 1 -s -r -p "Press [ Enter ] to back on menu"
menu
else
read -p "Day Extend : " masaaktif
read -p "Limit User (IP): " iplim
exp=$(grep -E "$user" "/etc/ssh/.ssh.db" | cut -d ' ' -f 3 )
now=$(date +%Y-%m-%d)
d1=$(date -d "$exp" +%s)
d2=$(date -d "$now" +%s)
exp2=$(((d1 - d2) / 86400))
exp3=$(($exp2 + $masaaktif))
exp4=$(date -d "$exp3 days" +"%Y-%m-%d")
passwd -u $user
usermod -e  $exp4 $user
egrep "^$user" /etc/passwd >/dev/null
echo -e "$Pass
$Pass
"|passwd $user &> /dev/null
sed -i "/^### $user $exp/d" /etc/ssh/.ssh.db
echo "### ${user} ${exp4}" >>/etc/ssh/.ssh.db
sed -i "s/${exp}/${exp4}/g" /etc/ssh/$user.log
sed -i "s/${exp}/${exp4}/g" /var/www/html/ssh-$user.txt
logip=$(grep -o 'Limit Adress\s*:\s*[^ ]*' /etc/ssh/$(user).log | sed 's/Limit Adress\s*:\s*//')
sed -i "s/${exp}/${exp4}/g" /var/www/html/ssh-$user.txt
sed -i "s/${logip}/${iplim}/g" /etc/ssh/$user.log
sed -i "s/${logip}/${iplim}/g" /var/www/html/ssh-$user.txt
rm /etc/ssh/${user} >/dev/null 2>&1
if [[ ${iplim} != "0" ]]; then
echo "${iplim}" >/etc/ssh/${user}
fi
systemctl restart ssh >/dev/null 2>&1
systemctl restart sshd >/dev/null 2>&1
systemctl restart dropbear >/dev/null 2>&1
clear
echo -e "${g}┌──────────────────────────────────────────┐${p}"
echo -e "${b}                 RENEW  USER             ${p}"
echo -e "${g}└──────────────────────────────────────────┘${p}"
echo -e "${g}┌──────────────────────────────────────────┐${p}"
echo -e "       Username   : $user"
echo -e "       Days Added : $Days Days"
echo -e "       Expires on : $Expiration_Display"
echo -e "${g}└──────────────────────────────────────────┘${p}"
fi
echo ""
read -n 1 -s -r -p "Press [ Enter ] to back on menu"
menu
}
if [[ ${1} == "vmess" ]]; then
vm
fi
if [[ ${1} == "vless" ]]; then
vl
fi
if [[ ${1} == "trojan" ]]; then
tr
fi
if [[ ${1} == "ssh" ]]; then
sssh
fi
if [[ ${1} == "ss" ]]; then
ss
fi
