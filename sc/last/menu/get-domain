#!/bin/bash
# Edition : Stable Edition V2.0
# Auther  : Muh Aripin Ilham
# (C) Copyright 2023-2024 By  Under Tunnel
# =========================================
#!/bin/bash
g=$(cat /usr/sbin/mtsc.list | grep "^color" | cut -d " " -f 2)
gb=$(cat /usr/sbin/mtsc.list | grep "^color" | cut -d " " -f 3)
b=$(cat /usr/sbin/mtsc.list | grep "^color" | cut -d " " -f 4)
p=$(cat /usr/sbin/mtsc.list | grep "^color" | cut -d " " -f 5)
r=$(cat /usr/sbin/mtsc.list | grep "^color" | cut -d " " -f 6)
y=$(cat /usr/sbin/mtsc.list | grep "^color" | cut -d " " -f 7)
MYIP=$(wget -qO- ipv4.icanhazip.com);
echo "Loading..."
repo=https://raw.githubusercontent.com/gazzent/ip/main/ip
ipsaya=$(wget -qO- ipv4.icanhazip.com);
data_server=$(curl -v --insecure --silent https://google.com/ 2>&1 | grep Date | sed -e 's/< Date: //')
date_list=$(date +"%Y-%m-%d" -d "$data_server")
useexp=$(wget -qO- ${repo} | grep $ipsaya | awk '{print $4}')
if [[ $date_list < $useexp ]]; then
echo -ne
else
echo -e "${g}────────────────────────────────────────────${p}"
echo -e "${b}          404 NOT FOUND AUTOSCRIPT          ${p}"
echo -e "${g}────────────────────────────────────────────${p}"
echo -e ""
echo -e "            ${r}PERMISSION DENIED OR!${p}"
echo -e "   ${y}Your VPS${p} $ipsaya ${y}Expired${p}"
echo -e "     ${y}Buy access permissions for scripts${p}"
echo -e "             ${y}Contact Admin :${p}"
echo -e "      ${gb}Telegram${p} t.me/mehonk_mt"
echo -e "${g}────────────────────────────────────────────${p}"
exit
fi
red() { echo -e "\033[32;1m${*}\${p}"; }
function get_acme_domain() {
lama="$(cat /etc/xray/domain)"
echo -e "${g}--->${p}  Start "
systemctl stop nginx
systemctl stop haproxy
STOPWEBSERVER=$(lsof -i:80 | cut -d' ' -f1 | awk 'NR==2 {print $1}')
systemctl stop $STOPWEBSERVER
echo -e "${g}--->${g}  Getting Acme For Cert"
/root/.acme.sh/acme.sh --upgrade --auto-upgrade >/dev/null 2>&1
/root/.acme.sh/acme.sh --set-default-ca --server letsencrypt >/dev/null 2>&1
/root/.acme.sh/acme.sh --issue -d $lama --standalone -k ec-256
echo -e "${g}--->${p}  Starting renew cert "
sleep 2
/root/.acme.sh/acme.sh --installcert -d $lama --fullchainpath /etc/xray/xray.crt --keypath /etc/xray/xray.key --ecc
cat /etc/xray/xray.crt /etc/xray/xray.key | tee /etc/haproxy/haproxy.pem >/dev/null 2>&1
chmod +x /etc/xray/xray.key
chmod +x /etc/xray/xray.crt
chmod +x /etc/haproxy/haproxy.pem
echo -e "${g}--->${p}  Renew Cert Cloudflare Done "
sleep 2
echo ""
}
get_new_domain() {
LAST_DOMAIN="$(cat /etc/xray/domain)"
read -rp "Input your Domain : " -e dm
rm -rf /etc/xray/domain
echo $dm >/etc/xray/domain
domain="$(cat /etc/xray/domain)"
get_acme_domain
sed -i "s/${LAST_DOMAIN}/${domain}/g" /etc/nginx/conf.d/drop.conf >/dev/null 2>&1
sed -i "s/${LAST_DOMAIN}/${domain}/g" /var/www/html/index.html >/dev/null 2>&1
sed -i "s/${LAST_DOMAIN}/${domain}/g" /etc/haproxy/haproxy.cfg >/dev/null 2>&1
echo -e "${g}--->${p}  Renew Cert OpenVPN "
sleep 2
rm -r /etc/openvpn
bash /root/.config/rclone/OPENVPN
echo ""
read -n 1 -s -r -p "     Press [ Enter ] to restart service"
printf "%s
" "4" | get-service
}
ns_domain_cloudflare() {
NS="$(cat /etc/xray/dns)"
read -rp "Input your NSDomain : " -e NS_DOMAIN
rm -rf /etc/xray/dns
echo $NS_DOMAIN >/etc/xray/dns
sed -i "s/$NS/$NS_DOMAIN/g" /etc/systemd/system/server.service >/dev/null 2>&1
DNS="$(cat /etc/xray/dns)"
Pub=$( cat /etc/slowdns/server.pub )
echo -e " ${g}┌──────────────────────────────────────────┐${p}"
echo -e "   ${g} Succes Add NSDomain${p}"
echo -e " ${g}└──────────────────────────────────────────┘${p}"
echo -e " ${g}┌──────────────────────────────────────────┐${p}"
echo -e "   ${gb}NSDomain${p}  :  ${b}$DNS"
echo -e "   ${gb}PubKey${p}    :  ${b}$Pub"
echo -e "${g}└──────────────────────────────────────────┘${p}"
read -n 1 -s -r -p "     Press [ Enter ] to restart service"
printf "%s
" "4" | get-service
}
clear
DAOMIN="$(cat /etc/xray/domain)"
DNS="$(cat /etc/xray/dns)"
echo -e " ${g}┌──────────────────────────────────────────┐${p}"
echo -e " ${g}│         ${b}MENU DOMAIN VPS${p}|${p}"
echo -e " ${g}└──────────────────────────────────────────┘${p}"
echo -e " ${g}┌──────────────────────────────────────────┐${p}"
echo -e "   ${gb}Public IP${p} :  ${b}$MYIP"
echo -e "   ${gb}Domain${p}    :  ${b}$DAOMIN"
echo -e "   ${gb}NSDomain${p}  :  ${b}$DNS"
echo -e " ${g}└──────────────────────────────────────────┘${p}"
echo -e " ${g}┌──────────────────────────────────────────┐${p}"
echo -e "   ${gb}[1]• ${b}Renew Certificate Domain${p}"
echo -e "   ${gb}[2]• ${b}Renew Domain${p}"
echo -e "   ${gb}[3]• ${b}Renew NSDomain${p}"
echo -e "   ${gb}[4]• ${b}Back To Menu${p}"
echo -e " ${g}└──────────────────────────────────────────┘${p}"
echo -e ""
read -p "   Select From Options [ 1 - 4 ] : " OPT_MENU
echo -e ""
case $OPT_MENU in
1)
get_acme_domain
;;
2)
get_new_domain
;;
3)
ns_domain_cloudflare
;;
4)
menu
;;
*)
echo -e "${Red}You wrong command !${Font}"
sleep 1
menu
;;
esac
