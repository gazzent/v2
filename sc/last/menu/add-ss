#!/bin/bash
# Edition : Stable Edition V2.0
# Auther  : Muh Aripin Ilham
# (C) Copyright 2023-2024 By  Under Tunnel
# =========================================
#!/bin/bash
g=$(cat /usr/sbin/mtsc.list | grep "^color" | cut -d " " -f 2)
gb=$(cat /usr/sbin/mtsc.list | grep "^color" | cut -d " " -f 3)
b=$(cat /usr/sbin/mtsc.list | grep "^color" | cut -d " " -f 4)
p=$(cat /usr/sbin/mtsc.list | grep "^color" | cut -d " " -f 5)
r=$(cat /usr/sbin/mtsc.list | grep "^color" | cut -d " " -f 6)
y=$(cat /usr/sbin/mtsc.list | grep "^color" | cut -d " " -f 7)
MYIP=$(wget -qO- ipv4.icanhazip.com);
repo=https://raw.githubusercontent.com/gazzent/ip/main/ip
ipsaya=$(wget -qO- ipv4.icanhazip.com);
data_server=$(curl -v --insecure --silent https://google.com/ 2>&1 | grep Date | sed -e 's/< Date: //')
date_list=$(date +"%Y-%m-%d" -d "$data_server")
useexp=$(wget -qO- ${repo} | grep $ipsaya | awk '{print $4}')
if [[ $date_list < $useexp ]]; then
echo -ne
else
echo -e "${g}────────────────────────────────────────────${p}"
echo -e "${b}          404 NOT FOUND AUTOSCRIPT          ${p}"
echo -e "${g}────────────────────────────────────────────${p}"
echo -e ""
echo -e "            ${r}PERMISSION DENIED OR!${p}"
echo -e "   ${y}Your VPS${p} $ipsaya ${y}Expired${p}"
echo -e "     ${y}Buy access permissions for scripts${p}"
echo -e "             ${y}Contact Admin :${p}"
echo -e "      ${gb}Telegram${p} t.me/candravpnz"
echo -e "${g}────────────────────────────────────────────${p}"
exit
fi
echo "Loading..."
red() { echo -e "\033[32;1m${*}\${p}"; }
domain=$(cat /etc/xray/domain)
PUB=$(cat /etc/slowdns/server.pub)
CITY=$(cat /etc/xray/city)
NS=$(cat /etc/xray/dns)
clear
add_all() (
clear
until [[ $user =~ ^[a-zA-Z0-9_]+$ && ${CLIENT_EXISTS} == '0' ]]; do
echo -e "${g}┌──────────────────────────────────────────┐${p}"
echo -e "${g}│${b}    Add Sodosocks WS & gRPC Account   ${p}"
echo -e "${g}└──────────────────────────────────────────┘${p}"
read -rp "User: " -e user
CLIENT_EXISTS=$(grep -w $user /etc/xray/config.json | wc -l)
if [[ ${CLIENT_EXISTS} == '1' ]]; then
clear
echo -e "${g}┌──────────────────────────────────────────┐${p}"
echo ""
echo "      A client name was already created"
echo ""
echo -e "${g}└──────────────────────────────────────────┘${p}"
read -n 1 -s -r -p "Press [ Enter ] to back on menu"
menu
fi
done
read -p "Expired (days): " masaaktif
read -p "Limit Quota (GB): " Quota
read -p "Limit User (IP): " iplim
cipher="chacha20-ietf-poly1305"
uuid=$(cat /proc/sys/kernel/random/uuid)
exp=$(date -d "$masaaktif days" +"%Y-%m-%d")
sed -i '/#ssws$/a\#ss# '"$user $exp"'\
},{"password": "'""$uuid""'","method": "'""$cipher""'","email": "'""$user""'"' /etc/xray/config.json
sed -i '/#ssgrpc$/a\#ss# '"$user $exp"'\
},{"password": "'""$uuid""'","method": "'""$cipher""'","email": "'""$user""'"' /etc/xray/config.json
echo $cipher:$uuid > /tmp/log
shadowsocks_base64=$(cat /tmp/log)
echo -n "${shadowsocks_base64}" | base64 > /tmp/log1
shadowsocks_base64e=$(cat /tmp/log1)
shadowsockslink="ss://${shadowsocks_base64e}@$domain:443?plugin=xray-plugin;mux=0;path=/shadowsocks;host=$domain;tls#${user}"
shadowsockslink1="ss://${shadowsocks_base64e}@$domain:80?plugin=xray-plugin;mux=0;path=/shadowsocks;host=$domain;none#${user}"
shadowsockslink2="ss://${shadowsocks_base64e}@$domain:443?plugin=xray-plugin;mux=0;serviceName=shadowsocks-grpc;host=$domain;tls#${user}"
rm -rf /tmp/log
rm -rf /tmp/log1
cat >/var/www/html/ss-$user.txt <<-END
-----------------------------------------
UnderTunnel PROJECT
-----------------------------------------
Format Shadowsocks WS (TLS)
-----------------------------------------
{
"inbounds": [],
"outbounds": [
{
"mux": {
"enabled": false
},
"protocol": "shadowsocks",
"settings": {
"servers": [
{
"address": "${domain}",
"method": "chacha20-ietf-poly1305",
"password": "${uuid}",
"port": 443
}
]
},
"streamSettings": {
"network": "ws",
"security": "tls",
"tlsSettings": {
"allowInsecure": true,
"serverName": "${domain}"
},
"wsSettings": {
"headers": {
"Host": "${domain}"
},
"path": "/shadowsocks"
}
},
"tag": "V2RAY"
}
],
"policy": {
"levels": {
"8": {
"connIdle": 300,
"downlinkOnly": 1,
"handshake": 4,
"uplinkOnly": 1
}
}
}
}
-----------------------------------------
Format Shadowsocks WS (NTLS)
-----------------------------------------
{
"inbounds": [],
"outbounds": [
{
"mux": {
"enabled": false
},
"protocol": "shadowsocks",
"settings": {
"servers": [
{
"address": "${domain}",
"method": "chacha20-ietf-poly1305",
"password": "${uuid}",
"port": 80
}
]
},
"streamSettings": {
"grpcSettings": {
"serviceName": ""
},
"network": "ws",
"security": "none",
"wsSettings": {
"headers": {
"Host": "${domain}"
},
"path": "/shadowsocks"
}
},
"tag": "V2RAY"
}
],
"policy": {
"levels": {
"8": {
"connIdle": 300,
"downlinkOnly": 1,
"handshake": 4,
"uplinkOnly": 1
}
}
}
}
-----------------------------------------
Format Shadowsocks gRPC
-----------------------------------------
{
"inbounds": [],
"outbounds": [
{
"mux": {
"enabled": false
},
"protocol": "shadowsocks",
"settings": {
"servers": [
{
"address": "${domain}",
"method": "chacha20-ietf-poly1305",
"password": "${uuid}",
"port": 443
}
]
},
"streamSettings": {
"grpcSettings": {
"serviceName": "shadowsocks-grpc"
},
"network": "grpc",
"security": "tls",
"tlsSettings": {
"allowInsecure": true,
"serverName": "${domain}"
},
"wsSettings": {
"headers": {
"Host": "${domain}"
},
"path": "/shadowsocks"
}
},
"tag": "V2RAY"
}
],
"policy": {
"levels": {
"8": {
"connIdle": 300,
"downlinkOnly": 1,
"handshake": 4,
"uplinkOnly": 1
}
}
}
}
-----------------------------------------
Link Shadowsocks Account
-----------------------------------------
Link TLS  : ss://${shadowsocks_base64e}@${domain}:443?path=/shadowsocks&security=tls&encryption=none&type=ws#${user}
-----------------------------------------
Link NTLS : ss://${shadowsocks_base64e}@${domain}:80?path=/shadowsocks&security=none&encryption=none&type=ws#${user}
-----------------------------------------
Link gRPC : ss://${shadowsocks_base64e}@${domain}:443?mode=gun&security=tls&encryption=none&type=grpc&serviceName=shadowsocks-grpc&sni=bug.com#${user}
-----------------------------------------
Link Shadowsocks Xray Plugin
-----------------------------------------
Link TLS  : ${shadowsockslink}
-----------------------------------------
Link NTLS : ${shadowsockslink1}
-----------------------------------------
Link gRPC : ${shadowsockslink2}
-----------------------------------------
END
systemctl reload xray >/dev/null 2>&1
service cron restart >/dev/null 2>&1
if [ ! -e /etc/shadowsocks ]; then
mkdir -p /etc/shadowsocks
fi
if [ -z ${Quota} ]; then
Quota="0"
fi
c=$(echo "${Quota}" | sed 's/[^0-9]*//g')
d=$((${c} * 1024 * 1024 * 1024))
if [[ ${c} != "0" ]]; then
echo "${d} ${iplim}" >/etc/shadowsocks/${user}
fi
DATADB=$(cat /etc/shadowsocks/.shadowsocks.db | grep "^###" | grep -w "${user}" | awk '{print $2}')
if [[ "${DATADB}" != '' ]]; then
sed -i "/${user}/d" /etc/shadowsocks/.shadowsocks.db
fi
echo "### ${user} ${exp}" >>/etc/shadowsocks/.shadowsocks.db
clear
echo -e "${g}───────────────────────${p}" | tee -a /etc/shadowsocks/${user}.log
echo -e "${b}    Xray/Sodosocks Account     ${p}" | tee -a /etc/shadowsocks/${user}.log
echo -e "${g}───────────────────────${p}" | tee -a /etc/shadowsocks/${user}.log
echo -e "Remarks      : ${user}" | tee -a /etc/shadowsocks/${user}.log
echo -e "Domain       : ${domain}" | tee -a /etc/shadowsocks/${user}.log
echo -e "Location     : $CITY" | tee -a /etc/shadowsocks/${user}.log
echo -e "User Quota   : ${Quota} GB" | tee -a /etc/shadowsocks/${user}.log
echo -e "Limit Adress : ${iplim} IP" | tee -a /etc/shadowsocks/${user}.log
echo -e "Port TLS     : 443" | tee -a /etc/shadowsocks/${user}.log
echo -e "Port NTLS    : 80" | tee -a /etc/shadowsocks/${user}.log
echo -e "Port GRPC    : 443" | tee -a /etc/shadowsocks/${user}.log
echo -e "User ID      : ${uuid}" | tee -a /etc/shadowsocks/${user}.log
echo -e "AlterId      : 0" | tee -a /etc/shadowsocks/${user}.log
echo -e "Security     : auto" | tee -a /etc/shadowsocks/${user}.log
echo -e "Network      : WS or gRPC" | tee -a /etc/shadowsocks/${user}.log
echo -e "Path         : (/shadowsocks) " | tee -a /etc/shadowsocks/${user}.log
echo -e "Path Dynamic : CF-XRAY:https://bug.com " | tee -a /etc/shadowsocks/${user}.log
echo -e "ServiceName  : shadowsocks-grpc" | tee -a /etc/shadowsocks/${user}.log
echo -e "${g}───────────────────────────${p}" | tee -a /etc/shadowsocks/${user}.log
echo -e "Link Account : https://${domain}:81/ss-$user.txt" | tee -a /etc/shadowsocks/${user}.log
echo -e "${g}───────────────────────────${p}" | tee -a /etc/shadowsocks/${user}.log
echo -e "Expired On : $exp" | tee -a /etc/shadowsocks/${user}.log
echo -e "${g}───────────────────────────${p}" | tee -a /etc/shadowsocks/${user}.log
echo -e "" | tee -a /etc/shadowsocks/${user}.log
read -n 1 -s -r -p "Press [ Enter ] to back on menu"
shadowsocks
)
add_ws() (
clear
until [[ $user =~ ^[a-zA-Z0-9_]+$ && ${CLIENT_EXISTS} == '0' ]]; do
echo -e "${g}┌──────────────────────────────────────────┐${p}"
echo -e "${g}│${b}    Add Sodosocks WS Account   ${p}"
echo -e "${g}└──────────────────────────────────────────┘${p}"
read -rp "User: " -e user
CLIENT_EXISTS=$(grep -w $user /etc/xray/config.json | wc -l)
if [[ ${CLIENT_EXISTS} == '1' ]]; then
clear
echo -e "${g}┌──────────────────────────────────────────┐${p}"
echo ""
echo "      A client name was already created"
echo ""
echo -e "${g}└──────────────────────────────────────────┘${p}"
read -n 1 -s -r -p "Press [ Enter ] to back on menu"
menu
fi
done
read -p "Expired (days): " masaaktif
read -p "Limit Quota (GB): " Quota
read -p "Limit User (IP): " iplim
cipher="chacha20-ietf-poly1305"
uuid=$(cat /proc/sys/kernel/random/uuid)
exp=$(date -d "$masaaktif days" +"%Y-%m-%d")
sed -i '/#ssws$/a\#ss# '"$user $exp"'\
},{"password": "'""$uuid""'","method": "'""$cipher""'","email": "'""$user""'"' /etc/xray/config.json
echo $cipher:$uuid > /tmp/log
shadowsocks_base64=$(cat /tmp/log)
echo -n "${shadowsocks_base64}" | base64 > /tmp/log1
shadowsocks_base64e=$(cat /tmp/log1)
shadowsockslink="ss://${shadowsocks_base64e}@$domain:443?plugin=xray-plugin;mux=0;path=/shadowsocks;host=$domain;tls#${user}"
shadowsockslink1="ss://${shadowsocks_base64e}@$domain:80?plugin=xray-plugin;mux=0;path=/shadowsocks;host=$domain;none#${user}"
rm -rf /tmp/log
rm -rf /tmp/log1
cat >/var/www/html/ss-$user.txt <<-END
-----------------------------------------
UnderTunnel PROJECT
-----------------------------------------
Format Shadowsocks WS (TLS)
-----------------------------------------
{
"inbounds": [],
"outbounds": [
{
"mux": {
"enabled": false
},
"protocol": "shadowsocks",
"settings": {
"servers": [
{
"address": "${domain}",
"method": "chacha20-ietf-poly1305",
"password": "${uuid}",
"port": 443
}
]
},
"streamSettings": {
"network": "ws",
"security": "tls",
"tlsSettings": {
"allowInsecure": true,
"serverName": "${domain}"
},
"wsSettings": {
"headers": {
"Host": "${domain}"
},
"path": "/shadowsocks"
}
},
"tag": "V2RAY"
}
],
"policy": {
"levels": {
"8": {
"connIdle": 300,
"downlinkOnly": 1,
"handshake": 4,
"uplinkOnly": 1
}
}
}
}
-----------------------------------------
Format Shadowsocks WS (NTLS)
-----------------------------------------
{
"inbounds": [],
"outbounds": [
{
"mux": {
"enabled": false
},
"protocol": "shadowsocks",
"settings": {
"servers": [
{
"address": "${domain}",
"method": "chacha20-ietf-poly1305",
"password": "${uuid}",
"port": 80
}
]
},
"streamSettings": {
"grpcSettings": {
"serviceName": ""
},
"network": "ws",
"security": "none",
"wsSettings": {
"headers": {
"Host": "${domain}"
},
"path": "/shadowsocks"
}
},
"tag": "V2RAY"
}
],
"policy": {
"levels": {
"8": {
"connIdle": 300,
"downlinkOnly": 1,
"handshake": 4,
"uplinkOnly": 1
}
}
}
}
-----------------------------------------
Link Shadowsocks Account
-----------------------------------------
Link TLS  : ss://${shadowsocks_base64e}@${domain}:443?path=/shadowsocks&security=tls&encryption=none&type=ws#${user}
-----------------------------------------
Link NTLS : ss://${shadowsocks_base64e}@${domain}:80?path=/shadowsocks&security=none&encryption=none&type=ws#${user}
-----------------------------------------
Link Shadowsocks Xray Plugin
-----------------------------------------
Link TLS  : ${shadowsockslink}
-----------------------------------------
Link NTLS : ${shadowsockslink1}
-----------------------------------------
END
systemctl reload xray >/dev/null 2>&1
service cron restart >/dev/null 2>&1
if [ ! -e /etc/shadowsocks ]; then
mkdir -p /etc/shadowsocks
fi
if [ -z ${Quota} ]; then
Quota="0"
fi
c=$(echo "${Quota}" | sed 's/[^0-9]*//g')
d=$((${c} * 1024 * 1024 * 1024))
if [[ ${c} != "0" ]]; then
echo "${d} ${iplim}" >/etc/shadowsocks/${user}
fi
DATADB=$(cat /etc/shadowsocks/.shadowsocks.db | grep "^###" | grep -w "${user}" | awk '{print $2}')
if [[ "${DATADB}" != '' ]]; then
sed -i "/${user}/d" /etc/shadowsocks/.shadowsocks.db
fi
echo "### ${user} ${exp}" >>/etc/shadowsocks/.shadowsocks.db
clear
echo -e "${g}───────────────────────${p}" | tee -a /etc/shadowsocks/${user}.log
echo -e "${b}    Xray/Sodosocks Account     ${p}" | tee -a /etc/shadowsocks/${user}.log
echo -e "${g}───────────────────────${p}" | tee -a /etc/shadowsocks/${user}.log
echo -e "Remarks      : ${user}" | tee -a /etc/shadowsocks/${user}.log
echo -e "Domain       : ${domain}" | tee -a /etc/shadowsocks/${user}.log
echo -e "Location     : $CITY" | tee -a /etc/shadowsocks/${user}.log
echo -e "User Quota   : ${Quota} GB" | tee -a /etc/shadowsocks/${user}.log
echo -e "Limit Adress : ${iplim} IP" | tee -a /etc/shadowsocks/${user}.log
echo -e "Port TLS     : 443" | tee -a /etc/shadowsocks/${user}.log
echo -e "Port NTLS    : 80" | tee -a /etc/shadowsocks/${user}.log
echo -e "Port GRPC    : 443" | tee -a /etc/shadowsocks/${user}.log
echo -e "User ID      : ${uuid}" | tee -a /etc/shadowsocks/${user}.log
echo -e "AlterId      : 0" | tee -a /etc/shadowsocks/${user}.log
echo -e "Security     : auto" | tee -a /etc/shadowsocks/${user}.log
echo -e "Network      : WS or gRPC" | tee -a /etc/shadowsocks/${user}.log
echo -e "Path         : (/shadowsocks) " | tee -a /etc/shadowsocks/${user}.log
echo -e "Path Dynamic : CF-XRAY:https://bug.com " | tee -a /etc/shadowsocks/${user}.log
echo -e "ServiceName  : shadowsocks-grpc" | tee -a /etc/shadowsocks/${user}.log
echo -e "${g}───────────────────────────${p}" | tee -a /etc/shadowsocks/${user}.log
echo -e "Link Account : https://${domain}:81/ss-$user.txt" | tee -a /etc/shadowsocks/${user}.log
echo -e "${g}───────────────────────────${p}" | tee -a /etc/shadowsocks/${user}.log
echo -e "Expired On : $exp" | tee -a /etc/shadowsocks/${user}.log
echo -e "${g}───────────────────────────${p}" | tee -a /etc/shadowsocks/${user}.log
echo -e "" | tee -a /etc/shadowsocks/${user}.log
read -n 1 -s -r -p "Press [ Enter ] to back on menu"
shadowsocks
)
add_grpc() (
clear
until [[ $user =~ ^[a-zA-Z0-9_]+$ && ${CLIENT_EXISTS} == '0' ]]; do
echo -e "${g}┌──────────────────────────────────────────┐${p}"
echo -e "${g}│${b}    Add Sodosocks gRPC Account   ${p}"
echo -e "${g}└──────────────────────────────────────────┘${p}"
read -rp "User: " -e user
CLIENT_EXISTS=$(grep -w $user /etc/xray/config.json | wc -l)
if [[ ${CLIENT_EXISTS} == '1' ]]; then
clear
echo -e "${g}┌──────────────────────────────────────────┐${p}"
echo ""
echo "      A client name was already created"
echo ""
echo -e "${g}└──────────────────────────────────────────┘${p}"
read -n 1 -s -r -p "Press [ Enter ] to back on menu"
menu
fi
done
read -p "Expired (days): " masaaktif
read -p "Limit Quota (GB): " Quota
read -p "Limit User (IP): " iplim
cipher="chacha20-ietf-poly1305"
uuid=$(cat /proc/sys/kernel/random/uuid)
exp=$(date -d "$masaaktif days" +"%Y-%m-%d")
sed -i '/#ssgrpc$/a\#ss# '"$user $exp"'\
},{"password": "'""$uuid""'","method": "'""$cipher""'","email": "'""$user""'"' /etc/xray/config.json
echo $cipher:$uuid > /tmp/log
shadowsocks_base64=$(cat /tmp/log)
echo -n "${shadowsocks_base64}" | base64 > /tmp/log1
shadowsocks_base64e=$(cat /tmp/log1)
shadowsockslink2="ss://${shadowsocks_base64e}@$domain:443?plugin=xray-plugin;mux=0;serviceName=shadowsocks-grpc;host=$domain;tls#${user}"
rm -rf /tmp/log
rm -rf /tmp/log1
cat >/var/www/html/ss-$user.txt <<-END
-----------------------------------------
UnderTunnel PROJECT
-----------------------------------------
Format Shadowsocks gRPC
-----------------------------------------
{
"inbounds": [],
"outbounds": [
{
"mux": {
"enabled": false
},
"protocol": "shadowsocks",
"settings": {
"servers": [
{
"address": "${domain}",
"method": "chacha20-ietf-poly1305",
"password": "${uuid}",
"port": 443
}
]
},
"streamSettings": {
"grpcSettings": {
"serviceName": "shadowsocks-grpc"
},
"network": "grpc",
"security": "tls",
"tlsSettings": {
"allowInsecure": true,
"serverName": "${domain}"
},
"wsSettings": {
"headers": {
"Host": "${domain}"
},
"path": "/shadowsocks"
}
},
"tag": "V2RAY"
}
],
"policy": {
"levels": {
"8": {
"connIdle": 300,
"downlinkOnly": 1,
"handshake": 4,
"uplinkOnly": 1
}
}
}
}
-----------------------------------------
Link Shadowsocks Account
-----------------------------------------
Link gRPC : ss://${shadowsocks_base64e}@${domain}:443?mode=gun&security=tls&encryption=none&type=grpc&serviceName=shadowsocks-grpc&sni=bug.com#${user}
-----------------------------------------
Link Shadowsocks Xray Plugin
-----------------------------------------
Link gRPC : ${shadowsockslink2}
-----------------------------------------
END
systemctl reload xray >/dev/null 2>&1
service cron restart >/dev/null 2>&1
if [ ! -e /etc/shadowsocks ]; then
mkdir -p /etc/shadowsocks
fi
if [ -z ${Quota} ]; then
Quota="0"
fi
c=$(echo "${Quota}" | sed 's/[^0-9]*//g')
d=$((${c} * 1024 * 1024 * 1024))
if [[ ${c} != "0" ]]; then
echo "${d} ${iplim}" >/etc/shadowsocks/${user}
fi
DATADB=$(cat /etc/shadowsocks/.shadowsocks.db | grep "^###" | grep -w "${user}" | awk '{print $2}')
if [[ "${DATADB}" != '' ]]; then
sed -i "/${user}/d" /etc/shadowsocks/.shadowsocks.db
fi
echo "### ${user} ${exp}" >>/etc/shadowsocks/.shadowsocks.db
clear
echo -e "${g}───────────────────────${p}" | tee -a /etc/shadowsocks/${user}.log
echo -e "${b}    Xray/Sodosocks Account     ${p}" | tee -a /etc/shadowsocks/${user}.log
echo -e "${g}───────────────────────${p}" | tee -a /etc/shadowsocks/${user}.log
echo -e "Remarks      : ${user}" | tee -a /etc/shadowsocks/${user}.log
echo -e "Domain       : ${domain}" | tee -a /etc/shadowsocks/${user}.log
echo -e "Location     : $CITY" | tee -a /etc/shadowsocks/${user}.log
echo -e "User Quota   : ${Quota} GB" | tee -a /etc/shadowsocks/${user}.log
echo -e "Limit Adress : ${iplim} IP" | tee -a /etc/shadowsocks/${user}.log
echo -e "Port TLS     : 443" | tee -a /etc/shadowsocks/${user}.log
echo -e "Port NTLS    : 80" | tee -a /etc/shadowsocks/${user}.log
echo -e "Port GRPC    : 443" | tee -a /etc/shadowsocks/${user}.log
echo -e "User ID      : ${uuid}" | tee -a /etc/shadowsocks/${user}.log
echo -e "AlterId      : 0" | tee -a /etc/shadowsocks/${user}.log
echo -e "Security     : auto" | tee -a /etc/shadowsocks/${user}.log
echo -e "Network      : WS or gRPC" | tee -a /etc/shadowsocks/${user}.log
echo -e "Path         : (/shadowsocks) " | tee -a /etc/shadowsocks/${user}.log
echo -e "Path Dynamic : CF-XRAY:https://bug.com " | tee -a /etc/shadowsocks/${user}.log
echo -e "ServiceName  : shadowsocks-grpc" | tee -a /etc/shadowsocks/${user}.log
echo -e "${g}───────────────────────────${p}" | tee -a /etc/shadowsocks/${user}.log
echo -e "Link Account : https://${domain}:81/ss-$user.txt" | tee -a /etc/shadowsocks/${user}.log
echo -e "${g}───────────────────────────${p}" | tee -a /etc/shadowsocks/${user}.log
echo -e "Expired On : $exp" | tee -a /etc/shadowsocks/${user}.log
echo -e "${g}───────────────────────────${p}" | tee -a /etc/shadowsocks/${user}.log
echo -e "" | tee -a /etc/shadowsocks/${user}.log
read -n 1 -s -r -p "Press [ Enter ] to back on menu"
shadowsocks
)
clear
grenbo="${gb}"
NC='${p}'
echo -e "${g}┌──────────────────────────────────────────┐${p}"
echo -e "${g}│${b}       ADD ACCOUNT SHADOWSOCKS              ${p}"
echo -e "${g}└──────────────────────────────────────────┘${p}"
echo -e "${g}┌──────────────────────────────────────────┐${p}"
echo -e "${g}│  ${gb}[1]•${b} Creating Shadowsocks ( All )${p}"
echo -e "${g}│  ${gb}[2]•${b} Creating Shadowsocks WS${p}"
echo -e "${g}│  ${gb}[3]•${b} Creating Shadowsocks gRPC${p}"
echo -e "${g}│  ${gb}${p}"
echo -e "${g}│  ${gb} x•${b} Back To Menu${p}"
echo -e "${g}└──────────────────────────────────────────┘${p}"
echo -e ""
read -p "Select From Options [ 1 - 3 ] : " menu
case $menu in
1)
add_all
;;
2)
add_ws
;;
3)
add_grpc
;;
x)
clear
menu
;;
*)
echo -e "${Red}You wrong command !${Font}"
sleep 1
shadowsocks
;;
esac
