#!/bin/bash
# Edition : Stable Edition V2.0
# Auther  : Muh Aripin Ilham
# (C) Copyright 2023-2024 By  Under Tunnel
# =========================================
#!/bin/bash
g=$(cat /usr/sbin/mtsc.list | grep "^color" | cut -d " " -f 2)
gb=$(cat /usr/sbin/mtsc.list | grep "^color" | cut -d " " -f 3)
b=$(cat /usr/sbin/mtsc.list | grep "^color" | cut -d " " -f 4)
p=$(cat /usr/sbin/mtsc.list | grep "^color" | cut -d " " -f 5)
r=$(cat /usr/sbin/mtsc.list | grep "^color" | cut -d " " -f 6)
y=$(cat /usr/sbin/mtsc.list | grep "^color" | cut -d " " -f 7)
MYIP=$(wget -qO- ipv4.icanhazip.com);
echo "Loading..."
clear
repo=https://raw.githubusercontent.com/gazzent/ip/main/ip
idc=https://raw.githubusercontent.com/gazzent/v2/main/sc/
Latest="$(curl -sS ${idc}latest)"
ipsaya=$(wget -qO- ipv4.icanhazip.com);
data_server=$(curl -v --insecure --silent https://google.com/ 2>&1 | grep Date | sed -e 's/< Date: //')
date_list=$(date +"%Y-%m-%d" -d "$data_server")
useexp=$(wget -qO- ${repo} | grep $ipsaya | awk '{print $4}')
if [[ $date_list < $useexp ]]; then
echo -ne
else
echo -e "${g}────────────────────────────────────────────${p}"
echo -e "${b}          404 NOT FOUND AUTOSCRIPT          ${p}"
echo -e "${g}────────────────────────────────────────────${p}"
echo -e ""
echo -e "            ${r}PERMISSION DENIED OR!${p}"
echo -e "   ${y}Your VPS${p} $ipsaya ${y}Expired${p}"
echo -e "     ${y}Buy access permissions for scripts${p}"
echo -e "             ${y}Contact Admin :${p}"
echo -e "      ${gb}Telegram${p} t.me/mehonk_mt"
echo -e "${g}────────────────────────────────────────────${p}"
exit
fi
fun_bar() {
CMD[0]="$1"
CMD[1]="$2"
(
[[ -e $HOME/fim ]] && rm $HOME/fim
${CMD[0]} -y >/dev/null 2>&1
${CMD[1]} -y >/dev/null 2>&1
touch $HOME/fim
) >/dev/null 2>&1 &
tput civis
echo -ne "  ${b}Please Wait Loading ${p}- ${g}["
while true; do
for ((i = 0; i < 18; i++)); do
echo -ne "[0;32m▰"
sleep 0.1s
done
[[ -e $HOME/fim ]] && rm $HOME/fim && break
echo -e " ${g}]"
sleep 1s
tput cuu1
tput dl1
echo -ne "  ${b}Please Wait Loading ${p}- ${g}["
done
echo -e " ${g}]${p} -${y} OK !${p}"
tput cnorm
}
res1() {
cd
mkdir -p /tmp/menu
wget -O /tmp/menu/menu.zip "${idc}last/hapwspy.zip" >/dev/null 2>&1
cd /tmp/menu && 7z e -password-out menu.zip >/dev/null 2>&1
rm menu.zip && chmod +x * && cd
mv /tmp/menu/* /usr/sbin/
mv /tmp/menu/* /usr/sbin/ && rm -r /tmp/menu
sleep 2
}
res2() {
wget -O /tmp/hapwspy.sh "${idc}last/hapwspy.sh" >/dev/null 2>&1
bash /tmp/hapwspy.sh
rm /tmp/hapwspy.sh
sleep 2
}
upmenu() {
clear
echo -e "${g} ┌──────────────────────────────────────────┐${p}"
echo -e "${g} │        ${b}UDATE SCRIPT MENU${p}                 ${g}|${p}"
echo -e "${g} └──────────────────────────────────────────┘${p}"
echo -e "${g} ┌──────────────────────────────────────────┐${p}"
echo -e ""
echo -e "  ${gb} Update Tampilan Menu${p}"
fun_bar 'res1'
echo -e ""
echo -e "${g} └──────────────────────────────────────────┘${p}"
echo -e "   ${g}[INFO] ${b}Update Successfully... ${p}"
sleep 1
read -n 1 -s -r -p "   Press [ Enter ] to back on menu"
menu
}
upsys() {
clear
echo -e "${g} ┌──────────────────────────────────────────┐${p}"
echo -e "${g} │        ${b}UDATE SCRIPT SYSTEM${p}               ${g}|${p}"
echo -e "${g} └──────────────────────────────────────────┘${p}"
echo -e "${g} ┌──────────────────────────────────────────┐${p}"
echo -e ""
echo -e "  ${gb} Update System Script${p}"
fun_bar 'res2'
echo -e ""
echo -e "${g} └──────────────────────────────────────────┘${p}"
echo -e "   ${g}[INFO] ${b}Update Successfully... ${p}"
sleep 1
read -n 1 -s -r -p "   Press [ Enter ] to restart service"
printf "%s
" "4" | get-service
}
clear
Versi=$(cat /usr/sbin/mtsc.list | grep "^versi" | cut -d " " -f 2 )
echo -e " ${g}┌──────────────────────────────────────────┐${p}"
echo -e " ${g}│         ${b}UPDATE SCRIPT MENU${p}               ${y}|${p}"
echo -e " ${g}└──────────────────────────────────────────┘${p}"
echo -e " ${g}┌──────────────────────────────────────────┐${p}"
echo -e "   ${g}[1]•${b} Update Tampilan Menu${p}"
echo -e "   ${g}[2]•${b} Update System Service${p}"
echo -e " ${g}└──────────────────────────────────────────┘${p}"
echo -e " ${g}┌──────────────────────────────────────────┐${p}"
echo -e "   ${g} Script Version : ${b}$Versi"
echo -e " ${g}└──────────────────────────────────────────┘${p}"
echo -e "${b}$Latest"
echo -e "${p}"
read -p "   Select From Options [ 1 - 2 ] : " OPT_MENU
echo -e ""
case $OPT_MENU in
1)
upmenu
;;
2)
upsys
;;
*)
echo -e "${Red}You wrong command !${Font}"
sleep 1
menu
;;
esac
