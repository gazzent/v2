#!/bin/bash
# Edition : Stable Edition V2.0
# Auther  : Muh Aripin Ilham
# (C) Copyright 2023-2024 By  Under Tunnel
# =========================================
#!/bin/bash
g=$(cat /usr/sbin/mtsc.list | grep "^color" | cut -d " " -f 2)
gb=$(cat /usr/sbin/mtsc.list | grep "^color" | cut -d " " -f 3)
b=$(cat /usr/sbin/mtsc.list | grep "^color" | cut -d " " -f 4)
p=$(cat /usr/sbin/mtsc.list | grep "^color" | cut -d " " -f 5)
r=$(cat /usr/sbin/mtsc.list | grep "^color" | cut -d " " -f 6)
y=$(cat /usr/sbin/mtsc.list | grep "^color" | cut -d " " -f 7)
MYIP=$(wget -qO- ipv4.icanhazip.com);
repo=hhttps://raw.githubusercontent.com/gazzent/ip/main/ip
ipsaya=$(wget -qO- ipv4.icanhazip.com);
data_server=$(curl -v --insecure --silent https://google.com/ 2>&1 | grep Date | sed -e 's/< Date: //')
date_list=$(date +"%Y-%m-%d" -d "$data_server")
useexp=$(wget -qO- ${repo} | grep $ipsaya | awk '{print $4}')
if [[ $date_list < $useexp ]]; then
echo -ne
else
echo -e "${g}────────────────────────────────────────────${p}"
echo -e "${b}          404 NOT FOUND AUTOSCRIPT          ${p}"
echo -e "${g}────────────────────────────────────────────${p}"
echo -e ""
echo -e "            ${r}PERMISSION DENIED OR!${p}"
echo -e "   ${y}Your VPS${p} $ipsaya ${y}Expired${p}"
echo -e "     ${y}Buy access permissions for scripts${p}"
echo -e "             ${y}Contact Admin :${p}"
echo -e "      ${gb}Telegram${p} t.me/mehonk_mt"
echo -e "${g}────────────────────────────────────────────${p}"
exit
fi
echo "Loading..."
red() { echo -e "\033[32;1m${*}\${p}"; }
domain=$(cat /etc/xray/domain)
PUB=$(cat /etc/slowdns/server.pub)
CITY=$(cat /etc/xray/city)
NS=$(cat /etc/xray/dns)
clear
add_all() (
clear
until [[ $user =~ ^[a-zA-Z0-9_]+$ && ${CLIENT_EXISTS} == '0' ]]; do
clear
echo -e "${g}┌──────────────────────────────────────────┐${p}"
echo -e "${g}│${b}         Add Vmess Ws & gRPC Account           ${p}"
echo -e "${g}└──────────────────────────────────────────┘${p}"
read -p "Username : " user
CLIENT_EXISTS=$(grep -w $user /etc/xray/config.json | wc -l)
if [[ ${CLIENT_EXISTS} == '1' ]]; then
clear
echo -e "${g}┌──────────────────────────────────────────┐${p}"
echo ""
echo "      A client name was already created"
echo ""
echo -e "${g}└──────────────────────────────────────────┘${p}"
read -n 1 -s -r -p "Press [ Enter ] to back on menu"
menu
fi
done
uuid=$(cat /proc/sys/kernel/random/uuid)
read -p "Expired (days): " masaaktif
read -p "Limit Quota (GB): " Quota
read -p "Limit User (IP): " iplim
exp=$(date -d "$masaaktif days" +"%Y-%m-%d")
sed -i '/#vmess$/a\#vm# '"$user $exp"'\
},{"id": "'""$uuid""'","alterId": '"0"',"email": "'""$user""'"' /etc/xray/config.json
sed -i '/#vmessgrpc$/a\#vm# '"$user $exp"'\
},{"id": "'""$uuid""'","alterId": '"0"',"email": "'""$user""'"' /etc/xray/config.json
VMESS_WS=`cat<<EOF
{
"v": "2",
"ps": "${user}",
"add": "${domain}",
"port": "443",
"id": "${uuid}",
"aid": "0",
"net": "ws",
"path": "/vmess",
"type": "none",
"host": "${domain}",
"tls": "tls"
}
EOF`
VMESS_NON_TLS=`cat<<EOF
{
"v": "2",
"ps": "${user}",
"add": "${domain}",
"port": "80",
"id": "${uuid}",
"aid": "0",
"net": "ws",
"path": "/vmess",
"type": "none",
"host": "${domain}",
"tls": "none"
}
EOF`
VMESS_GRPC=`cat<<EOF
{
"v": "2",
"ps": "${user}",
"add": "bug.com",
"port": "443",
"id": "${uuid}",
"aid": "0",
"net": "grpc",
"path": "vmess-grpc",
"type": "none",
"host": "${domain}",
"tls": "tls"
}
EOF`
cat >/var/www/html/vmess-$user.txt <<-END
-----------------------------------------
UnderTunnel PROJECT
-----------------------------------------
Format Vmess WS (TLS)
-----------------------------------------
- name: Vmess-$user
type: vmess
server: ${domain}
port: 443
uuid: ${uuid}
alterId: 0
cipher: auto
tls: true
skip-cert-verify: true
servername: ${domain}
network: ws
ws-opts:
path: /vmess
headers:
Host: ${domain}
udp: true
-----------------------------------------
Format Vmess WS (NTLS)
-----------------------------------------
- name: Vmess-$user
type: vmess
server: ${domain}
port: 80
uuid: ${uuid}
alterId: 0
cipher: auto
tls: false
skip-cert-verify: false
servername: ${domain}
network: ws
ws-opts:
path: /vmess
headers:
Host: ${domain}
udp: true
-----------------------------------------
Format Vmess gRPC (SNI)
-----------------------------------------
- name: Vmess-$user-gRPC (SNI)
server: ${domain}
port: 443
type: vmess
uuid: ${uuid}
alterId: 0
cipher: auto
network: grpc
tls: true
servername: ${domain}
skip-cert-verify: true
grpc-opts:
grpc-service-name: vmess-grpc
-----------------------------------------
Link Vmess Account
-----------------------------------------
Link TLS : vmess://$(echo $VMESS_WS | base64 -w 0)
-----------------------------------------
Link NTLS : vmess://$(echo $VMESS_NON_TLS | base64 -w 0)
-----------------------------------------
Link GRPC : vmess://$(echo $VMESS_GRPC | base64 -w 0)
-----------------------------------------
END
vmesslink1="vmess://$(echo $VMESS_WS | base64 -w 0)"
vmesslink2="vmess://$(echo $VMESS_NON_TLS | base64 -w 0)"
vmesslink3="vmess://$(echo $VMESS_GRPC | base64 -w 0)"
systemctl restart xray
systemctl restart nginx
service cron restart
if [ ! -e /etc/vmess ]; then
mkdir -p /etc/vmess
fi
if [ -z ${Quota} ]; then
Quota="0"
fi
c=$(echo "${Quota}" | sed 's/[^0-9]*//g')
d=$((${c} * 1024 * 1024 * 1024))
if [[ ${c} != "0" ]]; then
echo "${d} ${iplim}" >/etc/vmess/${user}
fi
DATADB=$(cat /etc/vmess/.vmess.db | grep "^###" | grep -w "${user}" | awk '{print $2}')
if [[ "${DATADB}" != '' ]]; then
sed -i "/${user}/d" /etc/vmess/.vmess.db
fi
echo "### ${user} ${exp}" >>/etc/vmess/.vmess.db
clear
echo -e "${g}┌────────────────────────┐${p}" | tee -a /etc/vmess/${user}.log
echo -e "${b}    Xray/Vmess Account     ${p}" | tee -a /etc/vmess/${user}.log
echo -e "${g}└────────────────────────┘${p}" | tee -a /etc/vmess/${user}.log
echo -e "Remarks      : ${user}" | tee -a /etc/vmess/${user}.log
echo -e "Domain       : ${domain}" | tee -a /etc/vmess/${user}.log
echo -e "Location     : $CITY" | tee -a /etc/vmess/${user}.log
echo -e "User Quota   : ${Quota} GB" | tee -a /etc/vmess/${user}.log
echo -e "Limit Adress : ${iplim} IP" | tee -a /etc/vmess/${user}.log
echo -e "Port TLS     : 443" | tee -a /etc/vmess/${user}.log
echo -e "Port NTLS    : 80" | tee -a /etc/vmess/${user}.log
echo -e "Port GRPC    : 443" | tee -a /etc/vmess/${user}.log
echo -e "User ID      : ${uuid}" | tee -a /etc/vmess/${user}.log
echo -e "AlterId      : 0" | tee -a /etc/vmess/${user}.log
echo -e "Security     : auto" | tee -a /etc/vmess/${user}.log
echo -e "Network      : WS or gRPC" | tee -a /etc/vmess/${user}.log
echo -e "Path         : (/vmess) " | tee -a /etc/vmess/${user}.log
echo -e "Path Dynamic : CF-XRAY:https://bug.com " | tee -a /etc/vmess/${user}.log
echo -e "ServiceName  : vmess-grpc" | tee -a /etc/vmess/${user}.log
echo -e "${g}───────────────────────────${p}" | tee -a /etc/vmess/${user}.log
echo -e "Link TLS     : ${vmesslink1}" | tee -a /etc/vmess/${user}.log
echo -e "${g}───────────────────────────${p}" | tee -a /etc/vmess/${user}.log
echo -e "Link NTLS    : ${vmesslink2}" | tee -a /etc/vmess/${user}.log
echo -e "${g}───────────────────────────${p}" | tee -a /etc/vmess/${user}.log
echo -e "Link GRPC    : ${vmesslink3}" | tee -a /etc/vmess/${user}.log
echo -e "${g}───────────────────────────${p}" | tee -a /etc/vmess/${user}.log
echo -e "Link Account : https://${domain}:81/vmess-$user.txt" | tee -a /etc/vmess/${user}.log
echo -e "${g}───────────────────────────${p}" | tee -a /etc/vmess/${user}.log
echo -e "Expired On : $exp" | tee -a /etc/vmess/${user}.log
echo -e "${g}───────────────────────────${p}" | tee -a /etc/vmess/${user}.log
echo -e "" | tee -a /etc/vmess/${user}.log
read -n 1 -s -r -p "Press [ Enter ] to back on menu"
vmess
)
add_ws() (
clear
until [[ $user =~ ^[a-zA-Z0-9_]+$ && ${CLIENT_EXISTS} == '0' ]]; do
clear
echo -e "${g}┌──────────────────────────────────────────┐${p}"
echo -e "${g}│${b}         Add Vmess Ws Account           ${p}"
echo -e "${g}└──────────────────────────────────────────┘${p}"
read -p "Username : " user
CLIENT_EXISTS=$(grep -w $user /etc/xray/config.json | wc -l)
if [[ ${CLIENT_EXISTS} == '1' ]]; then
clear
echo -e "${g}┌──────────────────────────────────────────┐${p}"
echo ""
echo "      A client name was already created"
echo ""
echo -e "${g}└──────────────────────────────────────────┘${p}"
read -n 1 -s -r -p "Press [ Enter ] to back on menu"
menu
fi
done
uuid=$(cat /proc/sys/kernel/random/uuid)
read -p "Expired (days): " masaaktif
read -p "Limit Quota (GB): " Quota
read -p "Limit User (IP): " iplim
exp=$(date -d "$masaaktif days" +"%Y-%m-%d")
sed -i '/#vmess$/a\#vm# '"$user $exp"'\
},{"id": "'""$uuid""'","alterId": '"0"',"email": "'""$user""'"' /etc/xray/config.json
VMESS_WS=`cat<<EOF
{
"v": "2",
"ps": "${user}",
"add": "${domain}",
"port": "443",
"id": "${uuid}",
"aid": "0",
"net": "ws",
"path": "/vmess",
"type": "none",
"host": "${domain}",
"tls": "tls"
}
EOF`
VMESS_NON_TLS=`cat<<EOF
{
"v": "2",
"ps": "${user}",
"add": "${domain}",
"port": "80",
"id": "${uuid}",
"aid": "0",
"net": "ws",
"path": "/vmess",
"type": "none",
"host": "${domain}",
"tls": "none"
}
EOF`
cat >/var/www/html/vmess-$user.txt <<-END
-----------------------------------------
UnderTunnel PROJECT
-----------------------------------------
Format Vmess WS (TLS)
-----------------------------------------
- name: Vmess-$user
type: vmess
server: ${domain}
port: 443
uuid: ${uuid}
alterId: 0
cipher: auto
tls: true
skip-cert-verify: true
servername: ${domain}
network: ws
ws-opts:
path: /vmess
headers:
Host: ${domain}
udp: true
-----------------------------------------
Format Vmess WS (NTLS)
-----------------------------------------
- name: Vmess-$user
type: vmess
server: ${domain}
port: 80
uuid: ${uuid}
alterId: 0
cipher: auto
tls: false
skip-cert-verify: false
servername: ${domain}
network: ws
ws-opts:
path: /vmess
headers:
Host: ${domain}
udp: true
-----------------------------------------
Link Vmess Account
-----------------------------------------
Link TLS : vmess://$(echo $VMESS_WS | base64 -w 0)
-----------------------------------------
Link NTLS : vmess://$(echo $VMESS_NON_TLS | base64 -w 0)
-----------------------------------------
END
vmesslink1="vmess://$(echo $VMESS_WS | base64 -w 0)"
vmesslink2="vmess://$(echo $VMESS_NON_TLS | base64 -w 0)"
systemctl restart xray
systemctl restart nginx
service cron restart
if [ ! -e /etc/vmess ]; then
mkdir -p /etc/vmess
fi
if [ -z ${Quota} ]; then
Quota="0"
fi
c=$(echo "${Quota}" | sed 's/[^0-9]*//g')
d=$((${c} * 1024 * 1024 * 1024))
if [[ ${c} != "0" ]]; then
echo "${d} ${iplim}" >/etc/vmess/${user}
fi
DATADB=$(cat /etc/vmess/.vmess.db | grep "^###" | grep -w "${user}" | awk '{print $2}')
if [[ "${DATADB}" != '' ]]; then
sed -i "/${user}/d" /etc/vmess/.vmess.db
fi
echo "### ${user} ${exp}" >>/etc/vmess/.vmess.db
clear
echo -e "${g}┌────────────────────────┐${p}" | tee -a /etc/vmess/${user}.log
echo -e "${b}    Xray/Vmess Account     ${p}" | tee -a /etc/vmess/${user}.log
echo -e "${g}└────────────────────────┘${p}" | tee -a /etc/vmess/${user}.log
echo -e "Remarks      : ${user}" | tee -a /etc/vmess/${user}.log
echo -e "Domain       : ${domain}" | tee -a /etc/vmess/${user}.log
echo -e "Location     : $CITY" | tee -a /etc/vmess/${user}.log
echo -e "User Quota   : ${Quota} GB" | tee -a /etc/vmess/${user}.log
echo -e "Limit Adress : ${iplim} IP" | tee -a /etc/vmess/${user}.log
echo -e "Port TLS     : 443" | tee -a /etc/vmess/${user}.log
echo -e "Port NTLS    : 80" | tee -a /etc/vmess/${user}.log
echo -e "Port GRPC    : 443" | tee -a /etc/vmess/${user}.log
echo -e "User ID      : ${uuid}" | tee -a /etc/vmess/${user}.log
echo -e "AlterId      : 0" | tee -a /etc/vmess/${user}.log
echo -e "Security     : auto" | tee -a /etc/vmess/${user}.log
echo -e "Network      : WS or gRPC" | tee -a /etc/vmess/${user}.log
echo -e "Path         : (/vmess) " | tee -a /etc/vmess/${user}.log
echo -e "Path Dynamic : CF-XRAY:https://bug.com " | tee -a /etc/vmess/${user}.log
echo -e "ServiceName  : vmess-grpc" | tee -a /etc/vmess/${user}.log
echo -e "${g}───────────────────────────${p}" | tee -a /etc/vmess/${user}.log
echo -e "Link TLS     : ${vmesslink1}" | tee -a /etc/vmess/${user}.log
echo -e "${g}───────────────────────────${p}" | tee -a /etc/vmess/${user}.log
echo -e "Link NTLS    : ${vmesslink2}" | tee -a /etc/vmess/${user}.log
echo -e "${g}───────────────────────────${p}" | tee -a /etc/vmess/${user}.log
echo -e "Link Account : https://${domain}:81/vmess-$user.txt" | tee -a /etc/vmess/${user}.log
echo -e "${g}───────────────────────────${p}" | tee -a /etc/vmess/${user}.log
echo -e "Expired On : $exp" | tee -a /etc/vmess/${user}.log
echo -e "${g}───────────────────────────${p}" | tee -a /etc/vmess/${user}.log
echo -e "" | tee -a /etc/vmess/${user}.log
read -n 1 -s -r -p "Press [ Enter ] to back on menu"
vmess
)
add_grpc() (
clear
until [[ $user =~ ^[a-zA-Z0-9_]+$ && ${CLIENT_EXISTS} == '0' ]]; do
clear
echo -e "${g}┌──────────────────────────────────────────┐${p}"
echo -e "${g}│${b}         Add Vmess gRPC Account           ${p}"
echo -e "${g}└──────────────────────────────────────────┘${p}"
read -p "Username : " user
CLIENT_EXISTS=$(grep -w $user /etc/xray/config.json | wc -l)
if [[ ${CLIENT_EXISTS} == '1' ]]; then
clear
echo -e "${g}┌──────────────────────────────────────────┐${p}"
echo ""
echo "      A client name was already created"
echo ""
echo -e "${g}└──────────────────────────────────────────┘${p}"
read -n 1 -s -r -p "Press [ Enter ] to back on menu"
menu
fi
done
uuid=$(cat /proc/sys/kernel/random/uuid)
read -p "Expired (days): " masaaktif
read -p "Limit Quota (GB): " Quota
read -p "Limit User (IP): " iplim
exp=$(date -d "$masaaktif days" +"%Y-%m-%d")
sed -i '/#vmessgrpc$/a\#vm# '"$user $exp"'\
},{"id": "'""$uuid""'","alterId": '"0"',"email": "'""$user""'"' /etc/xray/config.json
VMESS_GRPC=`cat<<EOF
{
"v": "2",
"ps": "${user}",
"add": "bug.com",
"port": "443",
"id": "${uuid}",
"aid": "0",
"net": "grpc",
"path": "vmess-grpc",
"type": "none",
"host": "${domain}",
"tls": "tls"
}
EOF`
cat >/var/www/html/vmess-$user.txt <<-END
-----------------------------------------
UnderTunnel PROJECT
-----------------------------------------
Format Vmess gRPC (SNI)
-----------------------------------------
- name: Vmess-$user-gRPC (SNI)
server: ${domain}
port: 443
type: vmess
uuid: ${uuid}
alterId: 0
cipher: auto
network: grpc
tls: true
servername: ${domain}
skip-cert-verify: true
grpc-opts:
grpc-service-name: vmess-grpc
-----------------------------------------
Link Vmess Account
-----------------------------------------
Link GRPC : vmess://$(echo $VMESS_GRPC | base64 -w 0)
-----------------------------------------
END
vmesslink3="vmess://$(echo $VMESS_GRPC | base64 -w 0)"
systemctl restart xray
systemctl restart nginx
service cron restart
if [ ! -e /etc/vmess ]; then
mkdir -p /etc/vmess
fi
if [ -z ${Quota} ]; then
Quota="0"
fi
c=$(echo "${Quota}" | sed 's/[^0-9]*//g')
d=$((${c} * 1024 * 1024 * 1024))
if [[ ${c} != "0" ]]; then
echo "${d} ${iplim}" >/etc/vmess/${user}
fi
DATADB=$(cat /etc/vmess/.vmess.db | grep "^###" | grep -w "${user}" | awk '{print $2}')
if [[ "${DATADB}" != '' ]]; then
sed -i "/${user}/d" /etc/vmess/.vmess.db
fi
echo "### ${user} ${exp}" >>/etc/vmess/.vmess.db
curl -s --max-time $TIMES -d "chat_id=$CHATID&disable_web_page_preview=1&text=$TEXT&parse_mode=html" $URL >/dev/null
clear
echo -e "${g}┌────────────────────────┐${p}" | tee -a /etc/vmess/${user}.log
echo -e "${b}    Xray/Vmess Account     ${p}" | tee -a /etc/vmess/${user}.log
echo -e "${g}└────────────────────────┘${p}" | tee -a /etc/vmess/${user}.log
echo -e "Remarks      : ${user}" | tee -a /etc/vmess/${user}.log
echo -e "Domain       : ${domain}" | tee -a /etc/vmess/${user}.log
echo -e "Location     : $CITY" | tee -a /etc/vmess/${user}.log
echo -e "User Quota   : ${Quota} GB" | tee -a /etc/vmess/${user}.log
echo -e "Limit Adress : ${iplim} IP" | tee -a /etc/vmess/${user}.log
echo -e "Port TLS     : 443" | tee -a /etc/vmess/${user}.log
echo -e "Port NTLS    : 80" | tee -a /etc/vmess/${user}.log
echo -e "Port GRPC    : 443" | tee -a /etc/vmess/${user}.log
echo -e "User ID      : ${uuid}" | tee -a /etc/vmess/${user}.log
echo -e "AlterId      : 0" | tee -a /etc/vmess/${user}.log
echo -e "Security     : auto" | tee -a /etc/vmess/${user}.log
echo -e "Network      : WS or gRPC" | tee -a /etc/vmess/${user}.log
echo -e "Path         : (/vmess) " | tee -a /etc/vmess/${user}.log
echo -e "Path Dynamic : CF-XRAY:https://bug.com " | tee -a /etc/vmess/${user}.log
echo -e "ServiceName  : vmess-grpc" | tee -a /etc/vmess/${user}.log
echo -e "${g}───────────────────────────${p}" | tee -a /etc/vmess/${user}.log
echo -e "Link GRPC    : ${vmesslink3}" | tee -a /etc/vmess/${user}.log
echo -e "${g}───────────────────────────${p}" | tee -a /etc/vmess/${user}.log
echo -e "Link Account : https://${domain}:81/vmess-$user.txt" | tee -a /etc/vmess/${user}.log
echo -e "${g}───────────────────────────${p}" | tee -a /etc/vmess/${user}.log
echo -e "Expired On : $exp" | tee -a /etc/vmess/${user}.log
echo -e "${g}───────────────────────────${p}" | tee -a /etc/vmess/${user}.log
echo -e "" | tee -a /etc/vmess/${user}.log
read -n 1 -s -r -p "Press [ Enter ] to back on menu"
vmess
)
clear
grenbo="${gb}"
NC='${p}'
echo -e "${g}┌──────────────────────────────────────────┐${p}"
echo -e "${g}│${b}        ADD ACCOUNT VMESS              ${p}"
echo -e "${g}└──────────────────────────────────────────┘${p}"
echo -e "${g}┌──────────────────────────────────────────┐${p}"
echo -e "${g}│  ${gb}[1]•${b} Creating Vmess ( All )${p}"
echo -e "${g}│  ${gb}[2]•${b} Creating Vmess WS${p}"
echo -e "${g}│  ${gb}[3]•${b} Creating Vmess gRPC${p}"
echo -e "${g}└──────────────────────────────────────────┘${p}"
echo -e ""
read -p "Select From Options [ 1 - 4 ] : " menu
case $menu in
1)
add_all
;;
2)
add_ws
;;
3)
add_grpc
;;
*)
echo -e "${Red}You wrong command !${Font}"
sleep 1
vmess
;;
esac
