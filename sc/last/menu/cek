#!/bin/bash
# Edition : Stable Edition V2.0
# Auther  : Muh Aripin Ilham
# (C) Copyright 2023-2024 By  Under Tunnel
# =========================================
#!/bin/bash
g=$(cat /usr/sbin/mtsc.list | grep "^color" | cut -d " " -f 2)
gb=$(cat /usr/sbin/mtsc.list | grep "^color" | cut -d " " -f 3)
b=$(cat /usr/sbin/mtsc.list | grep "^color" | cut -d " " -f 4)
p=$(cat /usr/sbin/mtsc.list | grep "^color" | cut -d " " -f 5)
r=$(cat /usr/sbin/mtsc.list | grep "^color" | cut -d " " -f 6)
y=$(cat /usr/sbin/mtsc.list | grep "^color" | cut -d " " -f 7)
MYIP=$(wget -qO- ipv4.icanhazip.com);
echo "Loading..."
repo=https://raw.githubusercontent.com/gazzent/ip/main/ip
ipsaya=$(wget -qO- ipv4.icanhazip.com);
data_server=$(curl -v --insecure --silent https://google.com/ 2>&1 | grep Date | sed -e 's/< Date: //')
date_list=$(date +"%Y-%m-%d" -d "$data_server")
useexp=$(wget -qO- ${repo} | grep $ipsaya | awk '{print $4}')
if [[ $date_list < $useexp ]]; then
echo -ne
else
echo -e "${g}────────────────────────────────────────────${p}"
echo -e "${b}          404 NOT FOUND AUTOSCRIPT          ${p}"
echo -e "${g}────────────────────────────────────────────${p}"
echo -e ""
echo -e "            ${r}PERMISSION DENIED OR!${p}"
echo -e "   ${y}Your VPS${p} $ipsaya ${y}Expired${p}"
echo -e "     ${y}Buy access permissions for scripts${p}"
echo -e "             ${y}Contact Admin :${p}"
echo -e "      ${gb}Telegram${p} t.me/mehonk_mt"
echo -e "${g}────────────────────────────────────────────${p}"
exit
fi
vm() {
clear
echo -n >/tmp/other.txt
data=($(cat /etc/vmess/.vmess.db | grep '^###' | cut -d ' ' -f 2 | sort | uniq))
echo -e "${g}┌──────────────────────────────────────────┐${p}"
echo -e " ${b}      Vmess User Login Account            ${p}"
echo -e "${g}└──────────────────────────────────────────┘${p}"
for akun in "${data[@]}"; do
if [[ -z "$akun" ]]; then
akun="tidakada"
fi
echo -n >/tmp/ipvmess.txt
data2=($(cat /var/log/xray/access.log | tail -n 500 | cut -d " " -f 3 | sed 's/tcp://g' | cut -d ":" -f 1 | sort | uniq))
for ip in "${data2[@]}"; do
jum=$(cat /var/log/xray/access.log | grep -w "$akun" | tail -n 500 | cut -d " " -f 3 | sed 's/tcp://g' | cut -d ":" -f 1 | grep -w "$ip" | sort | uniq)
if [[ "$jum" = "$ip" ]]; then
echo "$jum" >>/tmp/ipvmess.txt
else
echo "$ip" >>/tmp/other.txt
fi
jum2=$(cat /tmp/ipvmess.txt)
sed -i "/$jum2/d" /tmp/other.txt >/dev/null 2>&1
done
jum=$(cat /tmp/ipvmess.txt)
if [[ -z "$jum" ]]; then
echo >/dev/null
else
jum2=$(cat /tmp/ipvmess.txt | nl)
echo "user : $akun"
echo "$jum2"
echo -e "${g} └────────────────────────────────────────┐${p}"
fi
rm -rf /tmp/ipvmess.txt
done
rm -rf /tmp/other.txt
echo ""
read -n 1 -s -r -p "Press [ Enter ] to back on menu"
vmess
}
vl() {
clear
echo -n >/tmp/other.txt
data=($(cat /etc/vless/.vless.db | grep '^###' | cut -d ' ' -f 2 | sort | uniq))
echo -e "${g}┌──────────────────────────────────────────┐${p}"
echo -e "${b}      Vless User Login Account            ${p}"
echo -e "${g}└──────────────────────────────────────────┘${p}"
echo -e "${g}┌──────────────────────────────────────────┐${p}"
for akun in "${data[@]}"; do
if [[ -z "$akun" ]]; then
akun="tidakada"
fi
echo -n >/tmp/ipvless.txt
data2=($(cat /var/log/xray/access.log | tail -n 500 | cut -d " " -f 3 | sed 's/tcp://g' | cut -d ":" -f 1 | sort | uniq))
for ip in "${data2[@]}"; do
jum=$(cat /var/log/xray/access.log | grep -w "$akun" | tail -n 500 | cut -d " " -f 3 | sed 's/tcp://g' | cut -d ":" -f 1 | grep -w "$ip" | sort | uniq)
if [[ "$jum" = "$ip" ]]; then
echo "$jum" >>/tmp/ipvless.txt
else
echo "$ip" >>/tmp/other.txt
fi
jum2=$(cat /tmp/ipvless.txt)
sed -i "/$jum2/d" /tmp/other.txt >/dev/null 2>&1
done
jum=$(cat /tmp/ipvless.txt)
if [[ -z "$jum" ]]; then
echo >/dev/null
else
jum2=$(cat /tmp/ipvless.txt | nl)
echo "user : $akun"
echo "$jum2"
echo -e "${g} └────────────────────────────────────────┐${p}"
fi
rm -rf /tmp/ipvless.txt
done
rm -rf /tmp/other.txt
echo ""
read -n 1 -s -r -p "Press [ Enter ] to back on menu"
vless
}
tr() {
clear
echo -n >/tmp/other.txt
data=($(cat /etc/trojan/.trojan.db | grep '^###' | cut -d ' ' -f 2 | sort | uniq))
echo -e "${g}┌──────────────────────────────────────────┐${p}"
echo -e " ${b}      Trojan User Login Account           ${p}"
echo -e "${g}└──────────────────────────────────────────┘${p}"
echo -e "${g}┌──────────────────────────────────────────┐${p}"
for akun in "${data[@]}"; do
if [[ -z "$akun" ]]; then
akun="tidakada"
fi
echo -n >/tmp/iptrojan.txt
data2=($(cat /var/log/xray/access.log | tail -n 500 | cut -d " " -f 3 | sed 's/tcp://g' | cut -d ":" -f 1 | sort | uniq))
for ip in "${data2[@]}"; do
jum=$(cat /var/log/xray/access.log | grep -w "$akun" | tail -n 500 | cut -d " " -f 3 | sed 's/tcp://g' | cut -d ":" -f 1 | grep -w "$ip" | sort | uniq)
if [[ "$jum" = "$ip" ]]; then
echo "$jum" >>/tmp/iptrojan.txt
else
echo "$ip" >>/tmp/other.txt
fi
jum2=$(cat /tmp/iptrojan.txt)
sed -i "/$jum2/d" /tmp/other.txt >/dev/null 2>&1
done
jum=$(cat /tmp/iptrojan.txt)
if [[ -z "$jum" ]]; then
echo >/dev/null
else
jum2=$(cat /tmp/iptrojan.txt | nl)
echo "user : $akun"
echo "$jum2"
echo -e "${g} └────────────────────────────────────────┐${p}"
fi
rm -rf /tmp/iptrojan.txt
done
rm -rf /tmp/other.txt
echo ""
read -n 1 -s -r -p "Press [ Enter ] to back on menu"
trojan
}
ss() {
clear
echo -n >/tmp/other.txt
data=($(cat /etc/shadowsocks/.shadowsocks.db | grep '^###' | cut -d ' ' -f 2 | sort | uniq))
echo -e "${g}┌──────────────────────────────────────────┐${p}"
echo -e " ${b}         Shadowsocks User Login Account   ${p}"
echo -e "${g}└──────────────────────────────────────────┘${p}"
echo -e "${g}┌──────────────────────────────────────────┐${p}"
for akun in "${data[@]}"; do
if [[ -z "$akun" ]]; then
akun="tidakada"
fi
echo -n >/tmp/ipshadowsocks.txt
data2=($(cat /var/log/xray/access.log | tail -n 500 | cut -d " " -f 3 | sed 's/tcp://g' | cut -d ":" -f 1 | sort | uniq))
for ip in "${data2[@]}"; do
jum=$(cat /var/log/xray/access.log | grep -w "$akun" | tail -n 500 | cut -d " " -f 3 | sed 's/tcp://g' | cut -d ":" -f 1 | grep -w "$ip" | sort | uniq)
if [[ "$jum" = "$ip" ]]; then
echo "$jum" >>/tmp/ipshadowsocks.txt
else
echo "$ip" >>/tmp/other.txt
fi
jum2=$(cat /tmp/ipshadowsocks.txt)
sed -i "/$jum2/d" /tmp/other.txt >/dev/null 2>&1
done
jum=$(cat /tmp/ipshadowsocks.txt)
if [[ -z "$jum" ]]; then
echo >/dev/null
else
jum2=$(cat /tmp/ipshadowsocks.txt | nl)
echo "user : $akun"
echo "$jum2"
echo -e "${g} └────────────────────────────────────────┐${p}"
fi
rm -rf /tmp/ipshadowsocks.txt
done
rm -rf /tmp/other.txt
echo ""
read -n 1 -s -r -p "Press [ Enter ] to back on menu"
shadowsocks
}
sssh() {
echo -e "${g}┌──────────────────────────────────────────┐${p}"
echo -e " ${b}          SSH OpenVPN User Login          ${p}"
echo -e "${g}└──────────────────────────────────────────┘${p}"
echo -e "${g}┌──────────────────────────────────────────┐${p}"
if [ -e "/var/log/auth.log" ]; then
LOG="/var/log/auth.log"
fi
data=($(ps aux | grep -i dropbear | awk '{print $2}'))
cat $LOG | grep -i dropbear | grep -i "Password auth succeeded" >/tmp/login-db.txt
for PID in "${data[@]}"; do
cat /tmp/login-db.txt | grep "dropbear\[$PID\]" >/tmp/login-db-pid.txt
NUM=$(cat /tmp/login-db-pid.txt | wc -l)
USER=$(cat /tmp/login-db-pid.txt | awk '{print $10}')
IP=$(cat /tmp/login-db-pid.txt | awk '{print $12}')
if [ $NUM -eq 1 ]; then
echo -e "${g}   Dropbear |  User   ${p}"
echo -e "${g} └────────────────────────────────────────┐${p}"
echo "    $PID  - $USER - $IP"
echo -e "${g} └────────────────────────────────────────┐${p}"
fi
done
echo " "
cat $LOG | grep -i sshd | grep -i "Accepted password for" >/tmp/login-op.txt
data=($(ps aux | grep "\[priv\]" | sort -k 72 | awk '{print $2}'))
for PID in "${data[@]}"; do
cat /tmp/login-op.txt | grep "sshd\[$PID\]" >/tmp/login-op-pid.txt
NUM=$(cat /tmp/login-op-pid.txt | wc -l)
USER=$(cat /tmp/login-op-pid.txt | awk '{print $9}')
IP=$(cat /tmp/login-op-pid.txt | awk '{print $11}')
if [ $NUM -eq 1 ]; then
echo -e "${g}   OpenSSH |  User   ${p}"
echo -e "${g} └────────────────────────────────────────┐${p}"
echo "    $PID - $USER - $IP"
echo -e "${g} └────────────────────────────────────────┐${p}"
fi
done
if [ -f "/etc/openvpn/server/openvpn-tcp.log" ]; then
echo " "
cat /etc/openvpn/server/openvpn-tcp.log | grep -w "^CLIENT_LIST" | cut -d ',' -f 2,3,8 | sed -e 's/,/      /g' >/tmp/vpn-login-tcp.txt
cat /tmp/vpn-login-tcp.txt
fi
if [ -f "/etc/openvpn/server/openvpn-udp.log" ]; then
echo " "
cat /etc/openvpn/server/openvpn-udp.log | grep -w "^CLIENT_LIST" | cut -d ',' -f 2,3,8 | sed -e 's/,/      /g' >/tmp/vpn-login-udp.txt
cat /tmp/vpn-login-udp.txt
fi
rm -f /tmp/login-db-pid.txt
rm -f /tmp/login-db.txt
rm -f /tmp/login-op-pid.txt
rm -f /tmp/login-op.txt
rm -f /tmp/vpn-login-tcp.txt
rm -f /tmp/vpn-login-udp.txt
echo -e "${g}└──────────────────────────────────────────┘${p}"
echo ""
read -n 1 -s -r -p "Press [ Enter ] to back on menu"
ssh
}
if [[ ${1} == "vmess" ]]; then
vm
fi
if [[ ${1} == "vless" ]]; then
vl
fi
if [[ ${1} == "trojan" ]]; then
tr
fi
if [[ ${1} == "ssh" ]]; then
sssh
fi
if [[ ${1} == "ss" ]]; then
ss
fi
